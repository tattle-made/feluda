import pytest
from unittest.mock import patch, MagicMock
from feluda import operator

@pytest.fixture
def mock_config():
    return {"param": "value"}

def test_operator_init_sets_config(monkeypatch, mock_config):
    monkeypatch.setattr(operator, "load_config", lambda: mock_config)
    op = operator.Operator()
    assert op.config == mock_config

def test_operator_run_calls_process(monkeypatch):
    mock_process = MagicMock(return_value="result")
    monkeypatch.setattr(operator.Operator, "process", mock_process)
    op = operator.Operator()
    result = op.run("input")
    mock_process.assert_called_once_with("input")
    assert result == "result"

def test_operator_process_handles_error(monkeypatch):
    op = operator.Operator()
    monkeypatch.setattr(op, "process", MagicMock(side_effect=Exception("fail")))
    with pytest.raises(Exception):
        op.run("bad input")