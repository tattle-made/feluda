[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "feluda"
version = "0.9.3"
description = "A Python library for media processing and analysis"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Feluda Team", email = "team@feluda.org" }]
maintainers = [{ name = "Feluda Maintainers", email = "maintainers@feluda.org" }]
keywords = ["media", "processing", "analysis", "machine-learning", "ai"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
urls = { 
    "Homepage" = "https://github.com/feluda/feluda",
    "Documentation" = "https://feluda.readthedocs.io",
    "Repository" = "https://github.com/feluda/feluda.git",
    "Issues" = "https://github.com/feluda/feluda/issues"
}

dependencies = [
    "boto3>=1.37.30",
    "dacite>=1.9.2",
    "pydub>=0.25.1",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "werkzeug>=3.1.3",
    "wget>=3.2",
    "pillow>=11.1.0",
    "numpy>=2.2.4",
]

[project.optional-dependencies]
dev = [
    "tomlkit>=0.13.2",
    "ruff>=0.11.4",
    "pre-commit>=4.2.0",
    "jupyter>=1.1.1",
    "notebook>=7.3.3",
    "pytest>=7.0.0",
    "black>=23.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[tool.hatch.build]
include = ["feluda"]
exclude = ["tests/*", "docs/*"]

[tool.hatch.build.targets.wheel]
packages = ["feluda"]

[tool.uv]
python = "3.10"
concurrent-installs = 4
config-settings = { editable_mode = "compat" }

[tool.uv.workspace]
members = [
    "feluda"
    "operators/image_vec_rep_resnet",
    "operators/vid_vec_rep_clip",
    "operators/cluster_embeddings",
    "operators/dimension_reduction",
]

[tool.uv.dev-dependencies]
lint = ["ruff", "black"]
test = ["pytest"]
docs = ["sphinx", "sphinx-rtd-theme"]

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
  "E",    # pycodestyle
  "F",    # pyflakes
  "I",    # isort
  "B",    # flake8-bugbear
  "UP",   # pyupgrade
  "C4",   # flake8-comprehensions
  "SIM",  # flake8-simplify
]
exclude = ["src", "dist", ".docker", ".pytest_cache", ".ruff_cache"]

[tool.semantic_release]
version_variable = ["pyproject.toml:project.version"]

[tool.semantic_release.branches.main]
match = "main"
prerelease = false
tag_format = "{name}-{version}"
