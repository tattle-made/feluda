Search.setIndex({"alltitles": {"1. Import and Initialize": [[15, "import-and-initialize"]], "2. Using Operators": [[15, "using-operators"]], "API Reference": [[13, null]], "Adding API Documentation": [[0, "adding-api-documentation"]], "Adding Examples": [[0, "adding-examples"]], "Adding General Pages": [[0, "adding-general-pages"]], "Adding New Documentation": [[0, "adding-new-documentation"]], "Adding New Operators": [[11, "adding-new-operators"]], "All Dependencies": [[14, "all-dependencies"]], "Audio Factory": [[1, "module-feluda.factory.audio_factory"]], "Audio Processing": [[14, "audio-processing"]], "Base Operator": [[1, "module-feluda.operator"]], "Basic Installation": [[14, "basic-installation"]], "Basic Usage": [[15, "basic-usage"]], "Build Commands": [[0, "build-commands"]], "Building Documentation": [[11, "building-documentation"]], "Building the Documentation": [[0, "building-the-documentation"]], "Classify Video Zero Shot Operator": [[3, null]], "Cluster Embeddings Operator": [[4, null]], "Code Style": [[11, "code-style"]], "Code of Conduct": [[11, "code-of-conduct"]], "Configuration": [[0, "configuration"], [1, "module-feluda.config"]], "Contributing to Feluda": [[11, null]], "Dependencies": [[4, "dependencies"], [5, "dependencies"], [7, "dependencies"]], "Description": [[3, "description"], [4, "description"], [5, "description"], [7, "description"], [8, "description"], [9, "description"]], "Development Dependencies": [[14, "development-dependencies"]], "Development Guidelines": [[11, "development-guidelines"]], "Development Installation": [[14, "development-installation"]], "Development Setup": [[11, "development-setup"]], "Dimension Reduction Operator": [[7, null]], "Documentation": [[11, "documentation"]], "Documentation Structure": [[0, "documentation-structure"]], "Examples": [[12, null], [13, null]], "Factory Modules": [[1, "factory-modules"]], "Feluda Core API": [[1, null]], "Feluda Documentation": [[0, null], [13, null]], "Getting Help": [[14, "getting-help"]], "Getting Started": [[11, "getting-started"], [13, null]], "How to Run the Tests": [[3, "how-to-run-the-tests"], [4, "how-to-run-the-tests"], [5, "how-to-run-the-tests"], [7, "how-to-run-the-tests"], [8, "how-to-run-the-tests"], [9, "how-to-run-the-tests"]], "Image Factory": [[1, "module-feluda.factory.image_factory"]], "Image Processing": [[14, "image-processing"]], "ImageVecRep-Resnet Operator": [[8, null]], "Installation": [[14, null]], "Key Features": [[13, "key-features"]], "LewdImageDetector Operator": [[5, null]], "License": [[11, "license"]], "Logger": [[1, "module-feluda.logger"]], "Main Feluda Class": [[1, "module-feluda.feluda"]], "Model Information": [[3, "model-information"], [4, "model-information"], [5, "model-information"], [7, "model-information"], [8, "model-information"], [9, "model-information"]], "Next Steps": [[15, "next-steps"]], "Operator Dependencies": [[3, "operator-dependencies"], [9, "operator-dependencies"], [14, "operator-dependencies"]], "Operators": [[2, null]], "Operators API": [[2, null]], "Optional Dependencies": [[14, "optional-dependencies"]], "Output Format": [[5, "output-format"]], "Prerequisites": [[0, "prerequisites"], [11, "prerequisites"], [14, "prerequisites"]], "Pull Request Guidelines": [[11, "pull-request-guidelines"]], "Pull Request Process": [[11, "pull-request-process"]], "Questions?": [[11, "questions"]], "Quick Start": [[15, null]], "Reporting Issues": [[11, "reporting-issues"]], "S3 Factory": [[1, "module-feluda.factory.s3_factory"]], "System Dependencies": [[3, "system-dependencies"], [8, "system-dependencies"], [9, "system-dependencies"]], "Testing": [[11, "testing"]], "Text Factory": [[1, "module-feluda.factory.text_factory"]], "Updating Documentation": [[11, "updating-documentation"]], "Usage": [[4, "usage"], [5, "usage"], [7, "usage"], [8, "usage"], [9, "usage"]], "Usage Example": [[3, "usage-example"]], "Verification": [[14, "verification"]], "VidVecRepClip Operator": [[9, null]], "Video Factory": [[1, "module-feluda.factory.video_factory"]], "Video Processing": [[14, "video-processing"]], "Viewing the Documentation": [[0, "viewing-the-documentation"]], "What is Feluda?": [[13, "what-is-feluda"]]}, "docnames": ["README", "api/feluda", "api/operators", "api/operators/classify_video_zero_shot", "api/operators/cluster_embeddings", "api/operators/detect_lewd_images", "api/operators/detect_text_in_image_tesseract", "api/operators/dimension_reduction", "api/operators/image_vec_rep_resnet", "api/operators/vid_vec_rep_clip", "api/operators/video_hash_tmk", "contributing", "examples/README", "index", "install", "quickstart"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["README.md", "api/feluda.md", "api/operators.md", "api/operators/classify_video_zero_shot.md", "api/operators/cluster_embeddings.md", "api/operators/detect_lewd_images.md", "api/operators/detect_text_in_image_tesseract.md", "api/operators/dimension_reduction.md", "api/operators/image_vec_rep_resnet.md", "api/operators/vid_vec_rep_clip.md", "api/operators/video_hash_tmk.md", "contributing.md", "examples/README.md", "index.md", "install.md", "quickstart.md"], "indexentries": {"__init__() (feluda.config.config method)": [[1, "feluda.config.Config.__init__", false]], "__init__() (feluda.config.operatorconfig method)": [[1, "feluda.config.OperatorConfig.__init__", false]], "__init__() (feluda.config.operatorparameters method)": [[1, "feluda.config.OperatorParameters.__init__", false]], "__init__() (feluda.config.queueconfig method)": [[1, "feluda.config.QueueConfig.__init__", false]], "__init__() (feluda.config.queueparameters method)": [[1, "feluda.config.QueueParameters.__init__", false]], "__init__() (feluda.config.serverconfig method)": [[1, "feluda.config.ServerConfig.__init__", false]], "__init__() (feluda.config.serverparameters method)": [[1, "feluda.config.ServerParameters.__init__", false]], "__init__() (feluda.config.storeconfig method)": [[1, "feluda.config.StoreConfig.__init__", false]], "__init__() (feluda.config.storeentity method)": [[1, "feluda.config.StoreEntity.__init__", false]], "__init__() (feluda.config.storeesparameters method)": [[1, "feluda.config.StoreESParameters.__init__", false]], "__init__() (feluda.config.storepostgresparameters method)": [[1, "feluda.config.StorePostgresParameters.__init__", false]], "__init__() (feluda.feluda.feluda method)": [[1, "feluda.feluda.Feluda.__init__", false]], "__init__() (feluda.logger.logger method)": [[1, "feluda.logger.Logger.__init__", false]], "__init__() (feluda.operator.operator method)": [[1, "feluda.operator.Operator.__init__", false]], "__init__() (operators.classify_video_zero_shot.classify_video_zero_shot.videoclassifier method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier.__init__", false]], "__init__() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.__init__", false]], "__init__() (operators.dimension_reduction.dimension_reduction.dimensionreduction method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.__init__", false]], "__init__() (operators.image_vec_rep_resnet.image_vec_rep_resnet.imagevecrepresnet method)": [[8, "operators.image_vec_rep_resnet.image_vec_rep_resnet.ImageVecRepResnet.__init__", false]], "__init__() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.__init__", false]], "affinity_propagation() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings static method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.affinity_propagation", false]], "agglomerative() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings static method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.agglomerative", false]], "analyze() (operators.classify_video_zero_shot.classify_video_zero_shot.videoclassifier method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier.analyze", false]], "analyze() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.analyze", false]], "audio_index_name (feluda.config.storeesparameters attribute)": [[1, "feluda.config.StoreESParameters.audio_index_name", false]], "audiofactory (class in feluda.factory.audio_factory)": [[1, "feluda.factory.audio_factory.AudioFactory", false]], "aws_access_key_id (feluda.factory.s3_factory.s3factory attribute)": [[1, "feluda.factory.s3_factory.S3Factory.aws_access_key_id", false]], "aws_bucket (feluda.factory.s3_factory.s3factory attribute)": [[1, "feluda.factory.s3_factory.S3Factory.aws_bucket", false]], "aws_region (feluda.factory.s3_factory.s3factory attribute)": [[1, "feluda.factory.s3_factory.S3Factory.aws_region", false]], "aws_secret_access_key (feluda.factory.s3_factory.s3factory attribute)": [[1, "feluda.factory.s3_factory.S3Factory.aws_secret_access_key", false]], "cleanup() (feluda.operator.operator method)": [[1, "feluda.operator.Operator.cleanup", false]], "cleanup() (operators.classify_video_zero_shot.classify_video_zero_shot.videoclassifier method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier.cleanup", false]], "cleanup() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.cleanup", false]], "cleanup() (operators.dimension_reduction.dimension_reduction.dimensionreduction method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.cleanup", false]], "cleanup() (operators.image_vec_rep_resnet.image_vec_rep_resnet.imagevecrepresnet method)": [[8, "operators.image_vec_rep_resnet.image_vec_rep_resnet.ImageVecRepResnet.cleanup", false]], "cleanup() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.cleanup", false]], "clusterembeddings (class in operators.cluster_embeddings.cluster_embeddings)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings", false]], "config (class in feluda.config)": [[1, "feluda.config.Config", false]], "debug() (feluda.logger.logger method)": [[1, "feluda.logger.Logger.debug", false]], "dimensionreduction (class in operators.dimension_reduction.dimension_reduction)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction", false]], "download_file_from_s3() (feluda.factory.s3_factory.s3factory static method)": [[1, "feluda.factory.s3_factory.S3Factory.download_file_from_s3", false]], "entities (feluda.config.storeconfig attribute)": [[1, "feluda.config.StoreConfig.entities", false]], "error() (feluda.logger.logger method)": [[1, "feluda.logger.Logger.error", false]], "exception() (feluda.logger.logger method)": [[1, "feluda.logger.Logger.exception", false]], "extract_feature() (operators.image_vec_rep_resnet.image_vec_rep_resnet.imagevecrepresnet method)": [[8, "operators.image_vec_rep_resnet.image_vec_rep_resnet.ImageVecRepResnet.extract_feature", false]], "extract_features() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.extract_features", false]], "extract_frames() (operators.classify_video_zero_shot.classify_video_zero_shot.videoclassifier method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier.extract_frames", false]], "extract_frames() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip static method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.extract_frames", false]], "feluda (class in feluda.feluda)": [[1, "feluda.feluda.Feluda", false]], "feluda.config": [[1, "module-feluda.config", false]], "feluda.factory.audio_factory": [[1, "module-feluda.factory.audio_factory", false]], "feluda.factory.image_factory": [[1, "module-feluda.factory.image_factory", false]], "feluda.factory.s3_factory": [[1, "module-feluda.factory.s3_factory", false]], "feluda.factory.text_factory": [[1, "module-feluda.factory.text_factory", false]], "feluda.factory.video_factory": [[1, "module-feluda.factory.video_factory", false]], "feluda.feluda": [[1, "module-feluda.feluda", false]], "feluda.logger": [[1, "module-feluda.logger", false]], "feluda.operator": [[1, "module-feluda.operator", false]], "gen_data() (operators.classify_video_zero_shot.classify_video_zero_shot.videoclassifier method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier.gen_data", false]], "gen_data() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings static method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.gen_data", false]], "gen_data() (operators.dimension_reduction.dimension_reduction.dimensionreduction static method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.gen_data", false]], "gendata() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.gendata", false]], "get_mean_feature() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.get_mean_feature", false]], "get_reduction_model() (operators.dimension_reduction.dimension_reduction.dimensionreduction static method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.get_reduction_model", false]], "host_name (feluda.config.queueparameters attribute)": [[1, "feluda.config.QueueParameters.host_name", false]], "host_name (feluda.config.storeesparameters attribute)": [[1, "feluda.config.StoreESParameters.host_name", false]], "image_index_name (feluda.config.storeesparameters attribute)": [[1, "feluda.config.StoreESParameters.image_index_name", false]], "imagefactory (class in feluda.factory.image_factory)": [[1, "feluda.factory.image_factory.ImageFactory", false]], "imagetextdetector (class in operators.detect_text_in_image_tesseract.detect_text_in_image_tesseract)": [[6, "operators.detect_text_in_image_tesseract.detect_text_in_image_tesseract.ImageTextDetector", false]], "imagevecrepresnet (class in operators.image_vec_rep_resnet.image_vec_rep_resnet)": [[8, "operators.image_vec_rep_resnet.image_vec_rep_resnet.ImageVecRepResnet", false]], "info() (feluda.logger.logger method)": [[1, "feluda.logger.Logger.info", false]], "kmeans() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings static method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.kmeans", false]], "label (feluda.config.operatorconfig attribute)": [[1, "feluda.config.OperatorConfig.label", false]], "label (feluda.config.queueconfig attribute)": [[1, "feluda.config.QueueConfig.label", false]], "label (feluda.config.serverconfig attribute)": [[1, "feluda.config.ServerConfig.label", false]], "label (feluda.config.storeentity attribute)": [[1, "feluda.config.StoreEntity.label", false]], "load() (in module feluda.config)": [[1, "feluda.config.load", false]], "load_model() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.load_model", false]], "logger (class in feluda.logger)": [[1, "feluda.logger.Logger", false]], "make_from_file_in_memory() (feluda.factory.image_factory.imagefactory static method)": [[1, "feluda.factory.image_factory.ImageFactory.make_from_file_in_memory", false]], "make_from_file_in_memory() (feluda.factory.text_factory.textfactory static method)": [[1, "feluda.factory.text_factory.TextFactory.make_from_file_in_memory", false]], "make_from_file_in_memory() (feluda.factory.video_factory.videofactory static method)": [[1, "feluda.factory.video_factory.VideoFactory.make_from_file_in_memory", false]], "make_from_file_on_disk() (feluda.factory.audio_factory.audiofactory static method)": [[1, "feluda.factory.audio_factory.AudioFactory.make_from_file_on_disk", false]], "make_from_file_on_disk() (feluda.factory.image_factory.imagefactory static method)": [[1, "feluda.factory.image_factory.ImageFactory.make_from_file_on_disk", false]], "make_from_file_on_disk() (feluda.factory.text_factory.textfactory static method)": [[1, "feluda.factory.text_factory.TextFactory.make_from_file_on_disk", false]], "make_from_file_on_disk() (feluda.factory.video_factory.videofactory static method)": [[1, "feluda.factory.video_factory.VideoFactory.make_from_file_on_disk", false]], "make_from_file_on_disk_to_path() (feluda.factory.image_factory.imagefactory static method)": [[1, "feluda.factory.image_factory.ImageFactory.make_from_file_on_disk_to_path", false]], "make_from_url() (feluda.factory.audio_factory.audiofactory static method)": [[1, "feluda.factory.audio_factory.AudioFactory.make_from_url", false]], "make_from_url() (feluda.factory.image_factory.imagefactory static method)": [[1, "feluda.factory.image_factory.ImageFactory.make_from_url", false]], "make_from_url() (feluda.factory.text_factory.textfactory static method)": [[1, "feluda.factory.text_factory.TextFactory.make_from_url", false]], "make_from_url() (feluda.factory.video_factory.videofactory static method)": [[1, "feluda.factory.video_factory.VideoFactory.make_from_url", false]], "make_from_url_to_path() (feluda.factory.image_factory.imagefactory static method)": [[1, "feluda.factory.image_factory.ImageFactory.make_from_url_to_path", false]], "make_from_url_to_wav() (feluda.factory.audio_factory.audiofactory static method)": [[1, "feluda.factory.audio_factory.AudioFactory.make_from_url_to_wav", false]], "module": [[1, "module-feluda.config", false], [1, "module-feluda.factory.audio_factory", false], [1, "module-feluda.factory.image_factory", false], [1, "module-feluda.factory.s3_factory", false], [1, "module-feluda.factory.text_factory", false], [1, "module-feluda.factory.video_factory", false], [1, "module-feluda.feluda", false], [1, "module-feluda.logger", false], [1, "module-feluda.operator", false]], "name (feluda.config.operatorparameters attribute)": [[1, "feluda.config.OperatorParameters.name", false]], "operator (class in feluda.operator)": [[1, "feluda.operator.Operator", false]], "operatorconfig (class in feluda.config)": [[1, "feluda.config.OperatorConfig", false]], "operatorparameters (class in feluda.config)": [[1, "feluda.config.OperatorParameters", false]], "operators (feluda.config.config attribute)": [[1, "feluda.config.Config.operators", false]], "parameters (feluda.config.operatorconfig attribute)": [[1, "feluda.config.OperatorConfig.parameters", false]], "parameters (feluda.config.operatorparameters attribute)": [[1, "feluda.config.OperatorParameters.parameters", false]], "parameters (feluda.config.queueconfig attribute)": [[1, "feluda.config.QueueConfig.parameters", false]], "parameters (feluda.config.serverconfig attribute)": [[1, "feluda.config.ServerConfig.parameters", false]], "parameters (feluda.config.storeentity attribute)": [[1, "feluda.config.StoreEntity.parameters", false]], "port (feluda.config.serverparameters attribute)": [[1, "feluda.config.ServerParameters.port", false]], "predict() (operators.classify_video_zero_shot.classify_video_zero_shot.videoclassifier method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier.predict", false]], "prettyprint() (feluda.logger.logger static method)": [[1, "feluda.logger.Logger.prettyprint", false]], "queue (feluda.config.config attribute)": [[1, "feluda.config.Config.queue", false]], "queueconfig (class in feluda.config)": [[1, "feluda.config.QueueConfig", false]], "queueparameters (class in feluda.config)": [[1, "feluda.config.QueueParameters", false]], "queues (feluda.config.queueparameters attribute)": [[1, "feluda.config.QueueParameters.queues", false]], "run() (feluda.operator.operator method)": [[1, "feluda.operator.Operator.run", false]], "run() (operators.classify_video_zero_shot.classify_video_zero_shot.videoclassifier method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier.run", false]], "run() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.run", false]], "run() (operators.dimension_reduction.dimension_reduction.dimensionreduction method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.run", false]], "run() (operators.image_vec_rep_resnet.image_vec_rep_resnet.imagevecrepresnet method)": [[8, "operators.image_vec_rep_resnet.image_vec_rep_resnet.ImageVecRepResnet.run", false]], "run() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.run", false]], "s3 (feluda.factory.s3_factory.s3factory attribute)": [[1, "feluda.factory.s3_factory.S3Factory.s3", false]], "s3factory (class in feluda.factory.s3_factory)": [[1, "feluda.factory.s3_factory.S3Factory", false]], "server (feluda.config.config attribute)": [[1, "feluda.config.Config.server", false]], "serverconfig (class in feluda.config)": [[1, "feluda.config.ServerConfig", false]], "serverparameters (class in feluda.config)": [[1, "feluda.config.ServerParameters", false]], "state() (feluda.operator.operator method)": [[1, "feluda.operator.Operator.state", false]], "state() (operators.classify_video_zero_shot.classify_video_zero_shot.videoclassifier method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier.state", false]], "state() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.state", false]], "state() (operators.dimension_reduction.dimension_reduction.dimensionreduction method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.state", false]], "state() (operators.image_vec_rep_resnet.image_vec_rep_resnet.imagevecrepresnet method)": [[8, "operators.image_vec_rep_resnet.image_vec_rep_resnet.ImageVecRepResnet.state", false]], "state() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.state", false]], "store (feluda.config.config attribute)": [[1, "feluda.config.Config.store", false]], "storeconfig (class in feluda.config)": [[1, "feluda.config.StoreConfig", false]], "storeentity (class in feluda.config)": [[1, "feluda.config.StoreEntity", false]], "storeesparameters (class in feluda.config)": [[1, "feluda.config.StoreESParameters", false]], "storepostgresparameters (class in feluda.config)": [[1, "feluda.config.StorePostgresParameters", false]], "table_names (feluda.config.storepostgresparameters attribute)": [[1, "feluda.config.StorePostgresParameters.table_names", false]], "text_index_name (feluda.config.storeesparameters attribute)": [[1, "feluda.config.StoreESParameters.text_index_name", false]], "textfactory (class in feluda.factory.text_factory)": [[1, "feluda.factory.text_factory.TextFactory", false]], "type (feluda.config.operatorparameters attribute)": [[1, "feluda.config.OperatorParameters.type", false]], "type (feluda.config.queueconfig attribute)": [[1, "feluda.config.QueueConfig.type", false]], "type (feluda.config.serverparameters attribute)": [[1, "feluda.config.ServerParameters.type", false]], "type (feluda.config.storeentity attribute)": [[1, "feluda.config.StoreEntity.type", false]], "validate_system() (operators.classify_video_zero_shot.classify_video_zero_shot.videoclassifier static method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier.validate_system", false]], "validate_system() (operators.vid_vec_rep_clip.vid_vec_rep_clip.vidvecrepclip static method)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip.validate_system", false]], "video_index_name (feluda.config.storeesparameters attribute)": [[1, "feluda.config.StoreESParameters.video_index_name", false]], "videoclassifier (class in operators.classify_video_zero_shot.classify_video_zero_shot)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier", false]], "videofactory (class in feluda.factory.video_factory)": [[1, "feluda.factory.video_factory.VideoFactory", false]], "videohasher (class in operators.video_hash_tmk.video_hash_tmk)": [[10, "operators.video_hash_tmk.video_hash_tmk.VideoHasher", false]], "vidvecrepclip (class in operators.vid_vec_rep_clip.vid_vec_rep_clip)": [[9, "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip", false]]}, "objects": {"feluda": [[1, 0, 0, "-", "config"], [1, 0, 0, "-", "feluda"], [1, 0, 0, "-", "logger"], [1, 0, 0, "-", "operator"]], "feluda.config": [[1, 1, 1, "", "Config"], [1, 1, 1, "", "OperatorConfig"], [1, 1, 1, "", "OperatorParameters"], [1, 1, 1, "", "QueueConfig"], [1, 1, 1, "", "QueueParameters"], [1, 1, 1, "", "ServerConfig"], [1, 1, 1, "", "ServerParameters"], [1, 1, 1, "", "StoreConfig"], [1, 1, 1, "", "StoreESParameters"], [1, 1, 1, "", "StoreEntity"], [1, 1, 1, "", "StorePostgresParameters"], [1, 4, 1, "", "load"]], "feluda.config.Config": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "operators"], [1, 3, 1, "", "queue"], [1, 3, 1, "", "server"], [1, 3, 1, "", "store"]], "feluda.config.OperatorConfig": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "label"], [1, 3, 1, "", "parameters"]], "feluda.config.OperatorParameters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "name"], [1, 3, 1, "", "parameters"], [1, 3, 1, "", "type"]], "feluda.config.QueueConfig": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "label"], [1, 3, 1, "", "parameters"], [1, 3, 1, "", "type"]], "feluda.config.QueueParameters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "host_name"], [1, 3, 1, "", "queues"]], "feluda.config.ServerConfig": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "label"], [1, 3, 1, "", "parameters"]], "feluda.config.ServerParameters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "port"], [1, 3, 1, "", "type"]], "feluda.config.StoreConfig": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "entities"]], "feluda.config.StoreESParameters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "audio_index_name"], [1, 3, 1, "", "host_name"], [1, 3, 1, "", "image_index_name"], [1, 3, 1, "", "text_index_name"], [1, 3, 1, "", "video_index_name"]], "feluda.config.StoreEntity": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "label"], [1, 3, 1, "", "parameters"], [1, 3, 1, "", "type"]], "feluda.config.StorePostgresParameters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "table_names"]], "feluda.factory": [[1, 0, 0, "-", "audio_factory"], [1, 0, 0, "-", "image_factory"], [1, 0, 0, "-", "s3_factory"], [1, 0, 0, "-", "text_factory"], [1, 0, 0, "-", "video_factory"]], "feluda.factory.audio_factory": [[1, 1, 1, "", "AudioFactory"]], "feluda.factory.audio_factory.AudioFactory": [[1, 2, 1, "", "make_from_file_on_disk"], [1, 2, 1, "", "make_from_url"], [1, 2, 1, "", "make_from_url_to_wav"]], "feluda.factory.image_factory": [[1, 1, 1, "", "ImageFactory"]], "feluda.factory.image_factory.ImageFactory": [[1, 2, 1, "", "make_from_file_in_memory"], [1, 2, 1, "", "make_from_file_on_disk"], [1, 2, 1, "", "make_from_file_on_disk_to_path"], [1, 2, 1, "", "make_from_url"], [1, 2, 1, "", "make_from_url_to_path"]], "feluda.factory.s3_factory": [[1, 1, 1, "", "S3Factory"]], "feluda.factory.s3_factory.S3Factory": [[1, 3, 1, "", "aws_access_key_id"], [1, 3, 1, "", "aws_bucket"], [1, 3, 1, "", "aws_region"], [1, 3, 1, "", "aws_secret_access_key"], [1, 2, 1, "", "download_file_from_s3"], [1, 3, 1, "", "s3"]], "feluda.factory.text_factory": [[1, 1, 1, "", "TextFactory"]], "feluda.factory.text_factory.TextFactory": [[1, 2, 1, "", "make_from_file_in_memory"], [1, 2, 1, "", "make_from_file_on_disk"], [1, 2, 1, "", "make_from_url"]], "feluda.factory.video_factory": [[1, 1, 1, "", "VideoFactory"]], "feluda.factory.video_factory.VideoFactory": [[1, 2, 1, "", "make_from_file_in_memory"], [1, 2, 1, "", "make_from_file_on_disk"], [1, 2, 1, "", "make_from_url"]], "feluda.feluda": [[1, 1, 1, "", "Feluda"]], "feluda.feluda.Feluda": [[1, 2, 1, "", "__init__"]], "feluda.logger": [[1, 1, 1, "", "Logger"]], "feluda.logger.Logger": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "debug"], [1, 2, 1, "", "error"], [1, 2, 1, "", "exception"], [1, 2, 1, "", "info"], [1, 2, 1, "", "prettyprint"]], "feluda.operator": [[1, 1, 1, "", "Operator"]], "feluda.operator.Operator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "cleanup"], [1, 2, 1, "", "run"], [1, 2, 1, "", "state"]], "operators.classify_video_zero_shot.classify_video_zero_shot": [[3, 1, 1, "", "VideoClassifier"]], "operators.classify_video_zero_shot.classify_video_zero_shot.VideoClassifier": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "analyze"], [3, 2, 1, "", "cleanup"], [3, 2, 1, "", "extract_frames"], [3, 2, 1, "", "gen_data"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "run"], [3, 2, 1, "", "state"], [3, 2, 1, "", "validate_system"]], "operators.cluster_embeddings.cluster_embeddings": [[4, 1, 1, "", "ClusterEmbeddings"]], "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "affinity_propagation"], [4, 2, 1, "", "agglomerative"], [4, 2, 1, "", "cleanup"], [4, 2, 1, "", "gen_data"], [4, 2, 1, "", "kmeans"], [4, 2, 1, "", "run"], [4, 2, 1, "", "state"]], "operators.detect_text_in_image_tesseract.detect_text_in_image_tesseract": [[6, 1, 1, "", "ImageTextDetector"]], "operators.dimension_reduction.dimension_reduction": [[7, 1, 1, "", "DimensionReduction"]], "operators.dimension_reduction.dimension_reduction.DimensionReduction": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "cleanup"], [7, 2, 1, "", "gen_data"], [7, 2, 1, "", "get_reduction_model"], [7, 2, 1, "", "run"], [7, 2, 1, "", "state"]], "operators.image_vec_rep_resnet.image_vec_rep_resnet": [[8, 1, 1, "", "ImageVecRepResnet"]], "operators.image_vec_rep_resnet.image_vec_rep_resnet.ImageVecRepResnet": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "cleanup"], [8, 2, 1, "", "extract_feature"], [8, 2, 1, "", "run"], [8, 2, 1, "", "state"]], "operators.vid_vec_rep_clip.vid_vec_rep_clip": [[9, 1, 1, "", "VidVecRepClip"]], "operators.vid_vec_rep_clip.vid_vec_rep_clip.VidVecRepClip": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "analyze"], [9, 2, 1, "", "cleanup"], [9, 2, 1, "", "extract_features"], [9, 2, 1, "", "extract_frames"], [9, 2, 1, "", "gendata"], [9, 2, 1, "", "get_mean_feature"], [9, 2, 1, "", "load_model"], [9, 2, 1, "", "run"], [9, 2, 1, "", "state"], [9, 2, 1, "", "validate_system"]], "operators.video_hash_tmk.video_hash_tmk": [[10, 1, 1, "", "VideoHasher"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "terms": {"": 15, "0": [3, 4, 5, 7, 9], "015089876018464565": 3, "01_plot_tsne_video": [0, 12], "02_plot_cluster_video": [0, 12], "03_classify_video_zero_shot": [0, 12], "1": [3, 4, 5, 7, 9], "10": [8, 9, 11, 14], "100": 4, "101": 4, "11": [3, 9], "123": 7, "124": 7, "19": 5, "2": [3, 4, 5, 7, 9], "21": 9, "26": [4, 7], "2d": [7, 12], "3": [7, 8, 9, 11, 14], "30": 5, "32": [3, 9], "3d": 7, "3f": 5, "4": [3, 7, 9], "42": 7, "5": 7, "51": [3, 9], "512": [8, 9, 15], "6": [3, 4, 7, 9], "7": 7, "9849101901054382": 3, "A": [3, 4, 7, 9], "By": 11, "For": [11, 14], "If": [7, 11], "It": [3, 4, 5, 7, 8, 9, 13], "On": [3, 9], "The": [0, 3, 4, 5, 7, 8, 9, 11], "To": 11, "__init__": [1, 3, 4, 7, 8, 9, 11], "__version__": 14, "_build": 0, "abc": 1, "about": [11, 15], "abstract": 1, "access": [7, 9], "across": 3, "actual": 11, "add": [0, 3, 9, 11], "addit": 14, "affin": 4, "affinity_propag": 4, "after": [0, 3, 9, 14], "agglom": 4, "agre": 11, "algorithm": [4, 7], "all": [1, 2, 11], "amazonaw": 3, "an": [1, 3, 4, 5, 6, 7, 8, 9, 14, 15], "analys": 13, "analysi": 7, "analyz": [3, 5, 9, 13], "ani": [1, 3, 4, 7, 11], "api": [11, 14, 15], "applic": [5, 11, 13], "approach": 3, "appropri": 0, "approxim": 7, "apt": [3, 9], "ar": [3, 4, 5, 7, 8, 9], "architectur": 13, "arg": 1, "arrai": [4, 7], "audio": [4, 13], "audio_factori": 1, "audio_index_nam": 1, "audio_path": 1, "audio_url": 1, "audiofactori": 1, "autodoc": 0, "automat": [0, 4, 12], "automodul": 0, "avail": [2, 3, 9], "averag": [8, 9], "aws_access_key_id": 1, "aws_bucket": 1, "aws_region": 1, "aws_secret_access_kei": 1, "b": [3, 4, 9], "base": [3, 4, 6, 7, 8, 9, 10], "basic": 11, "batch": 9, "befor": 11, "behavior": 11, "being": 5, "between": [4, 5], "beyond": 13, "binari": 10, "block": 0, "bool": [3, 9], "both": [4, 9], "branch": 11, "browser": 0, "bucket_nam": 1, "bug": 14, "built": [0, 13], "bumbl": 5, "button": 0, "c": 4, "can": [0, 4, 11, 12, 14], "case": [12, 15], "cat": 3, "cat_vid_2mb": 3, "cd": [11, 14], "chang": 11, "check": [9, 11, 14, 15], "ci": 11, "class": [3, 4, 6, 7, 8, 9, 10], "classif": [0, 3, 8, 9], "classifi": [2, 12], "classify_video_zero_shot": 3, "clean": [0, 1, 3, 4, 7, 8, 9], "cleanup": [1, 3, 4, 5, 7, 8, 9, 15], "clear": 11, "clip": [3, 9], "clone": [11, 14], "cluster": [0, 2, 7, 8, 9, 12], "cluster_embed": 4, "clusterembed": 4, "code": 0, "colab": 12, "collect": 12, "com": [3, 5, 8, 11, 14, 15], "commit": 11, "compar": 3, "complex": 15, "compon": 0, "comput": 9, "concept": 11, "conf": 0, "config": 1, "config_path": 1, "configur": [7, 11, 13], "contain": [0, 3, 4, 7, 8, 9], "content": [3, 5, 13, 15], "contribut": [0, 13, 15], "copi": 0, "copybutton": 11, "core": [0, 13], "correctli": 11, "correspond": [0, 4, 7], "count": 4, "creat": [0, 1, 7, 11], "current": [3, 4, 7, 8, 9], "custom": 13, "d": 4, "data": [3, 4, 7], "dataclass": 1, "dataset": 5, "datastructur": 1, "debug": 1, "default": 4, "depend": [0, 11], "descript": [11, 12], "design": [0, 5, 11, 13], "detail": [14, 15], "detect": [5, 6], "detect_lewd_imag": 5, "detect_text_in_image_tesseract": 6, "detector": 5, "determin": 4, "dev": [0, 3, 4, 5, 7, 8, 9, 11, 14], "develop": 1, "devic": 9, "dict": [1, 3, 4, 7, 8, 9], "dictionari": [3, 4, 7, 8, 9], "differ": [14, 15], "dimens": 2, "dimension": [4, 7, 8, 9], "dimension_reduct": 7, "dimensionreduct": 7, "direct": 0, "directori": [0, 3, 4, 5, 7, 8, 9, 11], "discuss": 11, "disk": 1, "displai": 0, "distanc": 4, "distribut": [3, 7], "doc": [0, 11], "docstr": [0, 11], "document": [1, 2, 14, 15], "dog": 3, "download": [1, 3, 9], "download_file_from_s3": 1, "downstream": [4, 8, 9], "dtype": [8, 15], "e": [0, 3, 9, 11, 14], "each": [4, 9], "easi": [0, 13], "edit": 14, "elasticsearch": 1, "elev": [3, 9], "embed": [2, 3, 7, 8, 9, 12], "empti": 7, "enabl": [8, 9], "engin": 13, "enhanc": 0, "ensur": [3, 4, 5, 7, 8, 9, 11], "entiti": 1, "environ": [1, 3, 4, 5, 7, 8, 9], "error": [1, 11], "eval": 0, "exampl": [5, 7, 8, 9, 11, 14, 15], "except": 1, "exec": 0, "execut": [0, 1], "exist": 11, "expect": 11, "explor": 15, "extend": 13, "extract": [3, 8, 9, 12, 15], "extract_featur": [8, 9], "extract_fram": [3, 9], "f": [5, 7, 8, 15], "factori": [3, 5, 8, 9, 15], "fail": 7, "fals": [3, 9], "fashion": 3, "featur": [0, 3, 8, 9, 11, 15], "feluda": [2, 3, 4, 5, 7, 8, 9, 12, 14, 15], "feluda_integration_test": 11, "ffmpeg": [3, 9], "file": [0, 1, 3, 9, 10, 11], "file_data": 1, "file_kei": 1, "file_path": 1, "filepath": 1, "filestorag": 1, "filter": 5, "find": 12, "first": 9, "flag": 9, "flexibl": 13, "float": 5, "float16": [8, 15], "fname": [3, 9], "follow": [0, 11], "fork": 11, "format": [4, 7, 11], "frame": [3, 9], "framework": [1, 5, 13], "from": [0, 1, 3, 4, 5, 7, 8, 9, 11, 15], "function": 11, "g": [3, 9], "gen_data": [3, 4, 7], "gendata": 9, "gener": [3, 4, 7, 8, 9, 11], "get": [3, 15], "get_mean_featur": 9, "get_reduction_model": 7, "git": [11, 14], "github": [11, 14], "given": 3, "gnu": 11, "gplv3": 11, "group": 4, "guid": [0, 15], "guidelin": 0, "handl": 1, "hash": 10, "have": [3, 9, 11, 12], "help": [5, 15], "here": [12, 15], "hierarch": 4, "high": [4, 5, 7], "higher": [11, 14], "hook": 11, "host_nam": 1, "how": 12, "html": [0, 11], "http": [3, 5, 8, 11, 14, 15], "hub": 5, "huggingfac": [3, 5, 9], "i": [0, 3, 4, 5, 7, 8, 9, 11], "identifi": 5, "imag": [3, 5, 6, 8, 9, 13, 15], "image_data": 1, "image_factori": 1, "image_index_nam": 1, "image_obj": [8, 15], "image_path": 1, "image_url": 1, "image_vec_rep_resnet": [8, 15], "imagefactori": [1, 5, 8, 15], "imagenet": 8, "imagetextdetector": [2, 6], "imagevecrep": 2, "imagevecrepresnet": [8, 15], "img": 8, "implement": 11, "import": [3, 4, 5, 7, 8, 9, 14], "inappropri": 5, "includ": 11, "index": 0, "indian": 13, "indic": [5, 9], "individu": 14, "infer": 3, "info": 1, "inform": [14, 15], "inherit": 11, "initi": [1, 3, 4, 5, 7, 8, 9, 11], "input": [4, 5, 7, 8], "input_data": [4, 7], "instal": [0, 3, 4, 5, 7, 8, 9, 11, 13], "instanc": 7, "int": [1, 4], "integr": 11, "interest": 11, "interfac": 7, "intern": 1, "invalid": 7, "is_avg": 9, "issu": 14, "item": 7, "its": [1, 12], "jpg": [5, 8, 15], "jupyt": [0, 12], "kei": [0, 3, 8, 9], "keyerror": 7, "keyfram": 9, "kmean": 4, "kwarg": 1, "label": [1, 3, 4], "languag": 13, "layer": 8, "learn": [4, 7, 11, 15], "lewd": 5, "lewdimagedetector": 2, "like": 3, "likelihood": 5, "linear": 7, "lingual": 13, "lint": 11, "linux": [3, 9], "list": [1, 3, 4, 7, 9], "load": [1, 3, 5, 8, 9, 15], "load_model": 9, "local": [1, 11], "local_file_path": 1, "log": 1, "logic": 1, "low": 5, "lower": 7, "machin": 11, "maco": [3, 9], "made": 14, "mai": 14, "main": [0, 7, 11], "make": [0, 9, 11], "make_from_file_in_memori": 1, "make_from_file_on_disk": [1, 9], "make_from_file_on_disk_to_path": 1, "make_from_url": [1, 3, 8, 15], "make_from_url_to_path": [1, 5], "make_from_url_to_wav": 1, "manag": [3, 9], "manifold": 7, "map": 4, "markdown": 0, "matrix": [4, 9], "md": [0, 11], "mean": 9, "media": [3, 14], "memori": 1, "merg": 4, "messag": [1, 4, 11], "method": 9, "minim": 4, "modal": [4, 13], "mode": [11, 14], "model_typ": 7, "moder": 5, "modul": 11, "modular": 13, "module_nam": 1, "more": 15, "most": [3, 7], "mp4": [3, 9], "msg": 1, "multi": 13, "must": [3, 8], "myst": [0, 11], "n_cluster": 4, "n_compon": 7, "name": [1, 11], "nb": [0, 11], "nd": 7, "ndarrai": [4, 7, 8], "need": 11, "neighbor": 7, "non": 7, "none": [1, 3, 4, 7, 8, 9], "notebook": [0, 12], "np": [4, 8], "number": 4, "numpi": [4, 7, 8], "object": [1, 3, 8, 9], "ocr": 6, "onto": 9, "open": [0, 11, 14], "openai": [3, 9], "oper": [0, 6, 10, 12, 13], "operatorconfig": 1, "operatorparamet": 1, "option": [4, 7], "org": [3, 9], "our": 11, "out": 15, "output": [3, 4, 7], "packag": [3, 9], "pair": 4, "param": 7, "paramet": [1, 3, 4, 7, 8, 9], "partit": 4, "pass": 11, "path": [1, 3, 9], "pattern": 14, "payload": [4, 7], "paylod": 7, "pdqf": 10, "perplex": 7, "pil": [3, 8, 9], "pillow": [3, 9], "pip": [0, 3, 4, 5, 7, 8, 9, 11, 14], "pleas": 11, "point": 4, "pool": 8, "port": 1, "postgresql": 1, "potenti": 5, "power": 13, "powershel": [3, 9], "pre": [3, 8, 9, 11], "predict": 3, "prepar": [4, 7], "present": 5, "preserv": 7, "pretti": 1, "prettyprint": 1, "print": [1, 3, 4, 5, 7, 8, 9, 14, 15], "privat": 5, "prob": 3, "probabl": [3, 5], "problemat": 5, "process": [3, 9, 13, 15], "processor": [3, 9], "product": 13, "project": [3, 4, 5, 7, 8, 9, 11, 15], "propag": 4, "properti": 4, "prototyp": 9, "provid": [3, 7, 11, 13], "public": 11, "purpos": 7, "py": [0, 3, 4, 5, 7, 8, 9, 11], "pyproject": 11, "pytest": [3, 4, 5, 7, 8, 9, 11], "python": [0, 8, 9, 11, 14], "pytorch": [8, 9], "queue": 1, "queueconfig": 1, "queueparamet": 1, "quick": [0, 13], "quickli": 15, "quickstart": 0, "rais": 7, "random_st": 7, "read": [0, 11], "readi": 13, "readm": 11, "real": 13, "reduc": 7, "reduced_embed": 7, "reduct": 2, "reductionmodel": 7, "remov": [3, 9], "remove_after_process": [3, 9], "repositori": [11, 14], "represent": [8, 9], "reproduc": 11, "requir": [3, 9, 14], "resnet": 2, "resnet18": 8, "resourc": [1, 3, 4, 7, 8, 9], "respons": 0, "result": [3, 4, 7], "retriev": 4, "return": [1, 3, 4, 5, 7, 8, 9], "review": 14, "root": [3, 4, 5, 7, 8, 9], "rst": 0, "rtd": 11, "ruff": 11, "run": [1, 11, 15], "s3": 3, "s3_factori": 1, "s3factori": 1, "sample_1": 7, "sample_2": 7, "sample_3": 7, "save": 1, "scalabl": 7, "scikit": [4, 7], "score": 5, "search": [3, 11], "section": [1, 2], "send": 4, "server": 1, "serverconfig": 1, "serverparamet": 1, "shape": [8, 9, 15], "shot": [0, 2, 9, 12], "should": 11, "similar": [4, 8, 9], "simpl": 15, "size": [4, 7, 8, 9], "sne": [0, 7, 12], "some": 14, "sourc": [1, 3, 4, 5, 6, 7, 8, 9, 10], "space": 12, "specif": [11, 14], "specifi": [4, 9], "sphinx": [0, 11], "start": 0, "state": [1, 3, 4, 7, 8, 9], "static": [1, 3, 4, 7, 9], "step": 11, "stochast": 7, "store": 1, "storeconfig": 1, "storeent": 1, "storeesparamet": 1, "storepostgresparamet": 1, "str": [1, 3, 4, 7, 9], "structur": [7, 11], "submit": 11, "sudo": [3, 9], "summar": 4, "support": [4, 5, 7, 13, 14], "sure": 9, "syntax": 0, "system": [11, 13], "t": [0, 7, 12], "table_nam": 1, "task": [4, 8, 9], "tattl": [3, 14], "tensor": [3, 9], "tensorflow": 5, "tesseract": 6, "text": [3, 6, 13], "text_factori": 1, "text_index_nam": 1, "text_path": 1, "text_url": 1, "textfactori": 1, "thank": 11, "them": 12, "theme": [0, 11], "thi": [0, 1, 2, 11, 15], "tmk": 10, "toctre": 0, "toml": 11, "torch": [3, 9], "torchvis": 9, "train": [3, 8, 9], "transform": [3, 9], "tsne": 7, "two": 9, "type": [1, 3, 4, 7, 8, 9, 14, 15], "typic": 7, "ui": 0, "umap": 7, "under": 11, "understand": 11, "uniform": 7, "unit": 11, "unknown": 4, "up": [1, 3, 4, 7, 8, 9], "url": 1, "us": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "usag": 14, "user": 3, "usernam": 11, "uv": [0, 3, 4, 5, 7, 8, 9], "v": 11, "v3": 11, "valid": [3, 9], "validate_system": [3, 9], "valu": 5, "valueerror": 7, "varianc": 4, "variou": [1, 5, 13], "vector": [4, 7, 8, 9, 15], "veri": 5, "verifi": 14, "version": 11, "via": [3, 5, 9], "vid_vec": 9, "vid_vec_rep_clip": 9, "video": [2, 4, 9, 10, 12, 13], "video_factori": 1, "video_hash_tmk": 10, "video_index_nam": 1, "video_path": 1, "video_url": [1, 3], "videoclassifi": 3, "videofactori": [1, 3, 9], "videohash": [2, 10], "vido": 12, "vidvecrepclip": 2, "virtual": [3, 4, 5, 7, 8, 9], "vision": 8, "visual": [0, 4, 7, 12], "vit": [3, 9], "wav": 1, "web": 0, "weight": 8, "welcom": 13, "werkzeug": 1, "when": 11, "whether": [3, 9], "which": 12, "while": 7, "window": [3, 9], "winget": [3, 9], "within": 4, "work": [9, 11, 14], "world": 13, "yaml": 1, "yield": 9, "you": [0, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15], "your": [0, 3, 4, 5, 7, 8, 9, 11], "your_new_oper": 11, "your_oper": 11, "zero": [0, 2, 9, 12]}, "titles": ["Feluda Documentation", "Feluda Core API", "Operators API", "Classify Video Zero Shot Operator", "Cluster Embeddings Operator", "LewdImageDetector Operator", "&lt;no title&gt;", "Dimension Reduction Operator", "ImageVecRep-Resnet Operator", "VidVecRepClip Operator", "&lt;no title&gt;", "Contributing to Feluda", "Examples", "Feluda Documentation", "Installation", "Quick Start"], "titleterms": {"1": 15, "2": 15, "ad": [0, 11], "all": 14, "api": [0, 1, 2, 13], "audio": [1, 14], "base": 1, "basic": [14, 15], "build": [0, 11], "class": 1, "classifi": 3, "cluster": 4, "code": 11, "command": 0, "conduct": 11, "configur": [0, 1], "contribut": 11, "core": 1, "depend": [3, 4, 5, 7, 8, 9, 14], "descript": [3, 4, 5, 7, 8, 9], "develop": [11, 14], "dimens": 7, "document": [0, 11, 13], "embed": 4, "exampl": [0, 3, 12, 13], "factori": 1, "featur": 13, "feluda": [0, 1, 11, 13], "format": 5, "gener": 0, "get": [11, 13, 14], "guidelin": 11, "help": 14, "how": [3, 4, 5, 7, 8, 9], "i": 13, "imag": [1, 14], "imagevecrep": 8, "import": 15, "inform": [3, 4, 5, 7, 8, 9], "initi": 15, "instal": 14, "issu": 11, "kei": 13, "lewdimagedetector": 5, "licens": 11, "logger": 1, "main": 1, "model": [3, 4, 5, 7, 8, 9], "modul": 1, "new": [0, 11], "next": 15, "oper": [1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 15], "option": 14, "output": 5, "page": 0, "prerequisit": [0, 11, 14], "process": [11, 14], "pull": 11, "question": 11, "quick": 15, "reduct": 7, "refer": 13, "report": 11, "request": 11, "resnet": 8, "run": [3, 4, 5, 7, 8, 9], "s3": 1, "setup": 11, "shot": 3, "start": [11, 13, 15], "step": 15, "structur": 0, "style": 11, "system": [3, 8, 9], "test": [3, 4, 5, 7, 8, 9, 11], "text": 1, "updat": 11, "us": 15, "usag": [3, 4, 5, 7, 8, 9, 15], "verif": 14, "video": [1, 3, 14], "vidvecrepclip": 9, "view": 0, "what": 13, "zero": 3}})