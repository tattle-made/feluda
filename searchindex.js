Search.setIndex({"alltitles": {"1. Create Benchmark File": [[11, "create-benchmark-file"]], "1. Import and Initialize": [[16, "import-and-initialize"]], "1. Profiler Engine": [[11, "profiler-engine"]], "2. Data Generator": [[11, "data-generator"]], "2. Register the Operator": [[11, "register-the-operator"]], "2. Using Operators": [[16, "using-operators"]], "3. Operator Benchmarks": [[11, "operator-benchmarks"]], "4. Report Generation": [[11, "report-generation"]], "API Reference": [[14, null]], "Adding API Documentation": [[0, "adding-api-documentation"]], "Adding Examples": [[0, "adding-examples"]], "Adding General Pages": [[0, "adding-general-pages"]], "Adding New Documentation": [[0, "adding-new-documentation"]], "Adding New Operators": [[12, "adding-new-operators"]], "All Dependencies": [[15, "all-dependencies"]], "Audio Factory": [[1, "module-feluda.factory.audio_factory"]], "Audio Processing": [[15, "audio-processing"]], "Base Operator": [[1, "module-feluda.operator"]], "Basic Installation": [[15, "basic-installation"]], "Basic Usage": [[16, "basic-usage"]], "Benchmarking": [[11, null]], "Build Commands": [[0, "build-commands"]], "Building Documentation": [[12, "building-documentation"]], "Building the Documentation": [[0, "building-the-documentation"]], "Classify Video Zero Shot Operator": [[3, null]], "Cluster Embeddings Operator": [[4, null]], "Code Style": [[12, "code-style"]], "Code of Conduct": [[12, "code-of-conduct"]], "Configuration": [[0, "configuration"], [1, "module-feluda.config"], [6, "configuration"]], "Contributing to Feluda": [[12, null]], "Dependencies": [[4, "dependencies"], [5, "dependencies"], [7, "dependencies"], [10, "dependencies"], [11, "dependencies"]], "Description": [[3, "description"], [4, "description"], [5, "description"], [6, "description"], [7, "description"], [8, "description"], [9, "description"], [10, "description"]], "DetectLewdImages Operator": [[5, null]], "DetectTextInImage Operator": [[6, null]], "Development": [[14, null]], "Development Dependencies": [[15, "development-dependencies"]], "Development Guidelines": [[12, "development-guidelines"]], "Development Installation": [[15, "development-installation"]], "Development Setup": [[12, "development-setup"]], "Dimension Reduction Operator": [[7, null]], "Documentation": [[12, "documentation"]], "Documentation Structure": [[0, "documentation-structure"]], "Example: Creating a New Benchmark": [[11, "example-creating-a-new-benchmark"]], "Examples": [[13, null], [14, null]], "Execution Metrics": [[11, "execution-metrics"]], "Factory Modules": [[1, "factory-modules"]], "Feluda Core API": [[1, null]], "Feluda Documentation": [[0, null], [14, null]], "Getting Help": [[15, "getting-help"]], "Getting Started": [[12, "getting-started"], [14, null]], "How to Run the Tests": [[3, "how-to-run-the-tests"], [4, "how-to-run-the-tests"], [5, "how-to-run-the-tests"], [6, "how-to-run-the-tests"], [7, "how-to-run-the-tests"], [8, "how-to-run-the-tests"], [9, "how-to-run-the-tests"], [10, "how-to-run-the-tests"]], "Image Factory": [[1, "module-feluda.factory.image_factory"]], "Image Processing": [[15, "image-processing"]], "ImageVecRep-Resnet Operator": [[8, null]], "Installation": [[15, null]], "JSON Report Structure": [[11, "json-report-structure"]], "Key Features": [[14, "key-features"]], "License": [[12, "license"]], "Logger": [[1, "module-feluda.logger"]], "Main Feluda Class": [[1, "module-feluda.feluda"]], "Markdown Report": [[11, "markdown-report"]], "Model Information": [[3, "model-information"], [4, "model-information"], [5, "model-information"], [6, "model-information"], [7, "model-information"], [8, "model-information"], [9, "model-information"], [10, "model-information"]], "Next Steps": [[16, "next-steps"]], "Operator Dependencies": [[3, "operator-dependencies"], [6, "operator-dependencies"], [9, "operator-dependencies"], [15, "operator-dependencies"]], "Operators": [[2, null]], "Operators API": [[2, null]], "Optional Dependencies": [[15, "optional-dependencies"]], "Output Format": [[5, "output-format"]], "Performance Metrics": [[11, "performance-metrics"]], "Prerequisites": [[0, "prerequisites"], [12, "prerequisites"], [15, "prerequisites"]], "Pull Request Guidelines": [[12, "pull-request-guidelines"]], "Pull Request Process": [[12, "pull-request-process"]], "Quality Metrics": [[11, "quality-metrics"]], "Questions?": [[12, "questions"]], "Quick Start": [[11, "quick-start"], [16, null]], "Reporting Issues": [[12, "reporting-issues"]], "Run All Benchmarks": [[11, "run-all-benchmarks"]], "Run Specific Operator": [[11, "run-specific-operator"]], "S3 Factory": [[1, "module-feluda.factory.s3_factory"]], "System Components": [[11, "system-components"]], "System Dependencies": [[3, "system-dependencies"], [6, "system-dependencies"], [8, "system-dependencies"], [9, "system-dependencies"]], "Testing": [[12, "testing"]], "Text Factory": [[1, "module-feluda.factory.text_factory"]], "Understanding Results": [[11, "understanding-results"]], "Updating Documentation": [[12, "updating-documentation"]], "Usage": [[4, "usage"], [5, "usage"], [6, "usage"], [7, "usage"], [8, "usage"], [9, "usage"], [10, "usage"]], "Usage Example": [[3, "usage-example"]], "Using the Class-based Operator (Recommended)": [[10, "using-the-class-based-operator-recommended"]], "Verification": [[15, "verification"]], "VidVecRep Operator": [[9, null]], "Video Factory": [[1, "module-feluda.factory.video_factory"]], "Video Processing": [[15, "video-processing"]], "VideoHash Operator": [[10, null]], "Viewing the Documentation": [[0, "viewing-the-documentation"]], "What is Feluda?": [[14, "what-is-feluda"]]}, "docnames": ["README", "api/feluda", "api/operators", "api/operators/classify_video_zero_shot", "api/operators/cluster_embeddings", "api/operators/detect_lewd_images", "api/operators/detect_text_in_image_tesseract", "api/operators/dimension_reduction", "api/operators/image_vec_rep_resnet", "api/operators/vid_vec_rep_clip", "api/operators/video_hash_tmk", "benchmarking", "contributing", "examples/README", "index", "install", "quickstart"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["README.md", "api/feluda.md", "api/operators.md", "api/operators/classify_video_zero_shot.md", "api/operators/cluster_embeddings.md", "api/operators/detect_lewd_images.md", "api/operators/detect_text_in_image_tesseract.md", "api/operators/dimension_reduction.md", "api/operators/image_vec_rep_resnet.md", "api/operators/vid_vec_rep_clip.md", "api/operators/video_hash_tmk.md", "benchmarking.md", "contributing.md", "examples/README.md", "index.md", "install.md", "quickstart.md"], "indexentries": {"__init__() (feluda.config.config method)": [[1, "feluda.config.Config.__init__", false]], "__init__() (feluda.config.operatorconfig method)": [[1, "feluda.config.OperatorConfig.__init__", false]], "__init__() (feluda.config.operatorparameters method)": [[1, "feluda.config.OperatorParameters.__init__", false]], "__init__() (feluda.config.queueconfig method)": [[1, "feluda.config.QueueConfig.__init__", false]], "__init__() (feluda.config.queueparameters method)": [[1, "feluda.config.QueueParameters.__init__", false]], "__init__() (feluda.config.serverconfig method)": [[1, "feluda.config.ServerConfig.__init__", false]], "__init__() (feluda.config.serverparameters method)": [[1, "feluda.config.ServerParameters.__init__", false]], "__init__() (feluda.config.storeconfig method)": [[1, "feluda.config.StoreConfig.__init__", false]], "__init__() (feluda.config.storeentity method)": [[1, "feluda.config.StoreEntity.__init__", false]], "__init__() (feluda.config.storeesparameters method)": [[1, "feluda.config.StoreESParameters.__init__", false]], "__init__() (feluda.config.storepostgresparameters method)": [[1, "feluda.config.StorePostgresParameters.__init__", false]], "__init__() (feluda.feluda.feluda method)": [[1, "feluda.feluda.Feluda.__init__", false]], "__init__() (feluda.logger.logger method)": [[1, "feluda.logger.Logger.__init__", false]], "__init__() (feluda.operator.operator method)": [[1, "feluda.operator.Operator.__init__", false]], "__init__() (operators.classify_video_zero_shot.classify_video_zero_shot.classifyvideozeroshot method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot.__init__", false]], "__init__() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.__init__", false]], "__init__() (operators.dimension_reduction.dimension_reduction.dimensionreduction method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.__init__", false]], "__init__() (operators.image_vec_rep.image_vec_rep.imagevecrep method)": [[8, "operators.image_vec_rep.image_vec_rep.ImageVecRep.__init__", false]], "__init__() (operators.vid_vec_rep.vid_vec_rep.vidvecrep method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.__init__", false]], "__init__() (operators.video_hash.video_hash.videohash method)": [[10, "operators.video_hash.video_hash.VideoHash.__init__", false]], "affinity_propagation() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings static method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.affinity_propagation", false]], "agglomerative() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings static method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.agglomerative", false]], "analyze() (operators.classify_video_zero_shot.classify_video_zero_shot.classifyvideozeroshot method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot.analyze", false]], "analyze() (operators.vid_vec_rep.vid_vec_rep.vidvecrep method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.analyze", false]], "audio_index_name (feluda.config.storeesparameters attribute)": [[1, "feluda.config.StoreESParameters.audio_index_name", false]], "audiofactory (class in feluda.factory.audio_factory)": [[1, "feluda.factory.audio_factory.AudioFactory", false]], "aws_access_key_id (feluda.factory.s3_factory.s3factory attribute)": [[1, "feluda.factory.s3_factory.S3Factory.aws_access_key_id", false]], "aws_bucket (feluda.factory.s3_factory.s3factory attribute)": [[1, "feluda.factory.s3_factory.S3Factory.aws_bucket", false]], "aws_region (feluda.factory.s3_factory.s3factory attribute)": [[1, "feluda.factory.s3_factory.S3Factory.aws_region", false]], "aws_secret_access_key (feluda.factory.s3_factory.s3factory attribute)": [[1, "feluda.factory.s3_factory.S3Factory.aws_secret_access_key", false]], "classifyvideozeroshot (class in operators.classify_video_zero_shot.classify_video_zero_shot)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot", false]], "cleanup() (feluda.operator.operator method)": [[1, "feluda.operator.Operator.cleanup", false]], "cleanup() (operators.classify_video_zero_shot.classify_video_zero_shot.classifyvideozeroshot method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot.cleanup", false]], "cleanup() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.cleanup", false]], "cleanup() (operators.dimension_reduction.dimension_reduction.dimensionreduction method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.cleanup", false]], "cleanup() (operators.image_vec_rep.image_vec_rep.imagevecrep method)": [[8, "operators.image_vec_rep.image_vec_rep.ImageVecRep.cleanup", false]], "cleanup() (operators.vid_vec_rep.vid_vec_rep.vidvecrep method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.cleanup", false]], "cleanup() (operators.video_hash.video_hash.videohash method)": [[10, "operators.video_hash.video_hash.VideoHash.cleanup", false]], "clusterembeddings (class in operators.cluster_embeddings.cluster_embeddings)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings", false]], "config (class in feluda.config)": [[1, "feluda.config.Config", false]], "debug() (feluda.logger.logger method)": [[1, "feluda.logger.Logger.debug", false]], "dimensionreduction (class in operators.dimension_reduction.dimension_reduction)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction", false]], "download_file_from_s3() (feluda.factory.s3_factory.s3factory static method)": [[1, "feluda.factory.s3_factory.S3Factory.download_file_from_s3", false]], "entities (feluda.config.storeconfig attribute)": [[1, "feluda.config.StoreConfig.entities", false]], "error() (feluda.logger.logger method)": [[1, "feluda.logger.Logger.error", false]], "exception() (feluda.logger.logger method)": [[1, "feluda.logger.Logger.exception", false]], "extract_feature() (operators.image_vec_rep.image_vec_rep.imagevecrep method)": [[8, "operators.image_vec_rep.image_vec_rep.ImageVecRep.extract_feature", false]], "extract_features() (operators.vid_vec_rep.vid_vec_rep.vidvecrep method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.extract_features", false]], "extract_frames() (operators.classify_video_zero_shot.classify_video_zero_shot.classifyvideozeroshot method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot.extract_frames", false]], "extract_frames() (operators.vid_vec_rep.vid_vec_rep.vidvecrep static method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.extract_frames", false]], "extract_pure_average_feature() (operators.video_hash.video_hash.videohash static method)": [[10, "operators.video_hash.video_hash.VideoHash.extract_pure_average_feature", false]], "feluda (class in feluda.feluda)": [[1, "feluda.feluda.Feluda", false]], "feluda.config": [[1, "module-feluda.config", false]], "feluda.factory.audio_factory": [[1, "module-feluda.factory.audio_factory", false]], "feluda.factory.image_factory": [[1, "module-feluda.factory.image_factory", false]], "feluda.factory.s3_factory": [[1, "module-feluda.factory.s3_factory", false]], "feluda.factory.text_factory": [[1, "module-feluda.factory.text_factory", false]], "feluda.factory.video_factory": [[1, "module-feluda.factory.video_factory", false]], "feluda.feluda": [[1, "module-feluda.feluda", false]], "feluda.logger": [[1, "module-feluda.logger", false]], "feluda.operator": [[1, "module-feluda.operator", false]], "gen_data() (operators.classify_video_zero_shot.classify_video_zero_shot.classifyvideozeroshot method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot.gen_data", false]], "gen_data() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings static method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.gen_data", false]], "gen_data() (operators.dimension_reduction.dimension_reduction.dimensionreduction static method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.gen_data", false]], "gendata() (operators.vid_vec_rep.vid_vec_rep.vidvecrep method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.gendata", false]], "get_mean_feature() (operators.vid_vec_rep.vid_vec_rep.vidvecrep method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.get_mean_feature", false]], "get_reduction_model() (operators.dimension_reduction.dimension_reduction.dimensionreduction static method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.get_reduction_model", false]], "hash_video() (operators.video_hash.video_hash.videohash method)": [[10, "operators.video_hash.video_hash.VideoHash.hash_video", false]], "host_name (feluda.config.queueparameters attribute)": [[1, "feluda.config.QueueParameters.host_name", false]], "host_name (feluda.config.storeesparameters attribute)": [[1, "feluda.config.StoreESParameters.host_name", false]], "image_index_name (feluda.config.storeesparameters attribute)": [[1, "feluda.config.StoreESParameters.image_index_name", false]], "imagefactory (class in feluda.factory.image_factory)": [[1, "feluda.factory.image_factory.ImageFactory", false]], "imagevecrep (class in operators.image_vec_rep.image_vec_rep)": [[8, "operators.image_vec_rep.image_vec_rep.ImageVecRep", false]], "info() (feluda.logger.logger method)": [[1, "feluda.logger.Logger.info", false]], "kmeans() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings static method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.kmeans", false]], "label (feluda.config.operatorconfig attribute)": [[1, "feluda.config.OperatorConfig.label", false]], "label (feluda.config.queueconfig attribute)": [[1, "feluda.config.QueueConfig.label", false]], "label (feluda.config.serverconfig attribute)": [[1, "feluda.config.ServerConfig.label", false]], "label (feluda.config.storeentity attribute)": [[1, "feluda.config.StoreEntity.label", false]], "load() (in module feluda.config)": [[1, "feluda.config.load", false]], "load_model() (operators.vid_vec_rep.vid_vec_rep.vidvecrep method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.load_model", false]], "logger (class in feluda.logger)": [[1, "feluda.logger.Logger", false]], "make_from_file_in_memory() (feluda.factory.image_factory.imagefactory static method)": [[1, "feluda.factory.image_factory.ImageFactory.make_from_file_in_memory", false]], "make_from_file_in_memory() (feluda.factory.text_factory.textfactory static method)": [[1, "feluda.factory.text_factory.TextFactory.make_from_file_in_memory", false]], "make_from_file_in_memory() (feluda.factory.video_factory.videofactory static method)": [[1, "feluda.factory.video_factory.VideoFactory.make_from_file_in_memory", false]], "make_from_file_on_disk() (feluda.factory.audio_factory.audiofactory static method)": [[1, "feluda.factory.audio_factory.AudioFactory.make_from_file_on_disk", false]], "make_from_file_on_disk() (feluda.factory.image_factory.imagefactory static method)": [[1, "feluda.factory.image_factory.ImageFactory.make_from_file_on_disk", false]], "make_from_file_on_disk() (feluda.factory.text_factory.textfactory static method)": [[1, "feluda.factory.text_factory.TextFactory.make_from_file_on_disk", false]], "make_from_file_on_disk() (feluda.factory.video_factory.videofactory static method)": [[1, "feluda.factory.video_factory.VideoFactory.make_from_file_on_disk", false]], "make_from_file_on_disk_to_path() (feluda.factory.image_factory.imagefactory static method)": [[1, "feluda.factory.image_factory.ImageFactory.make_from_file_on_disk_to_path", false]], "make_from_url() (feluda.factory.audio_factory.audiofactory static method)": [[1, "feluda.factory.audio_factory.AudioFactory.make_from_url", false]], "make_from_url() (feluda.factory.image_factory.imagefactory static method)": [[1, "feluda.factory.image_factory.ImageFactory.make_from_url", false]], "make_from_url() (feluda.factory.text_factory.textfactory static method)": [[1, "feluda.factory.text_factory.TextFactory.make_from_url", false]], "make_from_url() (feluda.factory.video_factory.videofactory static method)": [[1, "feluda.factory.video_factory.VideoFactory.make_from_url", false]], "make_from_url_to_path() (feluda.factory.image_factory.imagefactory static method)": [[1, "feluda.factory.image_factory.ImageFactory.make_from_url_to_path", false]], "make_from_url_to_wav() (feluda.factory.audio_factory.audiofactory static method)": [[1, "feluda.factory.audio_factory.AudioFactory.make_from_url_to_wav", false]], "module": [[1, "module-feluda.config", false], [1, "module-feluda.factory.audio_factory", false], [1, "module-feluda.factory.image_factory", false], [1, "module-feluda.factory.s3_factory", false], [1, "module-feluda.factory.text_factory", false], [1, "module-feluda.factory.video_factory", false], [1, "module-feluda.feluda", false], [1, "module-feluda.logger", false], [1, "module-feluda.operator", false]], "name (feluda.config.operatorparameters attribute)": [[1, "feluda.config.OperatorParameters.name", false]], "operator (class in feluda.operator)": [[1, "feluda.operator.Operator", false]], "operatorconfig (class in feluda.config)": [[1, "feluda.config.OperatorConfig", false]], "operatorparameters (class in feluda.config)": [[1, "feluda.config.OperatorParameters", false]], "operators (feluda.config.config attribute)": [[1, "feluda.config.Config.operators", false]], "parameters (feluda.config.operatorconfig attribute)": [[1, "feluda.config.OperatorConfig.parameters", false]], "parameters (feluda.config.operatorparameters attribute)": [[1, "feluda.config.OperatorParameters.parameters", false]], "parameters (feluda.config.queueconfig attribute)": [[1, "feluda.config.QueueConfig.parameters", false]], "parameters (feluda.config.serverconfig attribute)": [[1, "feluda.config.ServerConfig.parameters", false]], "parameters (feluda.config.storeentity attribute)": [[1, "feluda.config.StoreEntity.parameters", false]], "port (feluda.config.serverparameters attribute)": [[1, "feluda.config.ServerParameters.port", false]], "predict() (operators.classify_video_zero_shot.classify_video_zero_shot.classifyvideozeroshot method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot.predict", false]], "prettyprint() (feluda.logger.logger static method)": [[1, "feluda.logger.Logger.prettyprint", false]], "queue (feluda.config.config attribute)": [[1, "feluda.config.Config.queue", false]], "queueconfig (class in feluda.config)": [[1, "feluda.config.QueueConfig", false]], "queueparameters (class in feluda.config)": [[1, "feluda.config.QueueParameters", false]], "queues (feluda.config.queueparameters attribute)": [[1, "feluda.config.QueueParameters.queues", false]], "run() (feluda.operator.operator method)": [[1, "feluda.operator.Operator.run", false]], "run() (operators.classify_video_zero_shot.classify_video_zero_shot.classifyvideozeroshot method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot.run", false]], "run() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.run", false]], "run() (operators.dimension_reduction.dimension_reduction.dimensionreduction method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.run", false]], "run() (operators.image_vec_rep.image_vec_rep.imagevecrep method)": [[8, "operators.image_vec_rep.image_vec_rep.ImageVecRep.run", false]], "run() (operators.vid_vec_rep.vid_vec_rep.vidvecrep method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.run", false]], "run() (operators.video_hash.video_hash.videohash method)": [[10, "operators.video_hash.video_hash.VideoHash.run", false]], "s3 (feluda.factory.s3_factory.s3factory attribute)": [[1, "feluda.factory.s3_factory.S3Factory.s3", false]], "s3factory (class in feluda.factory.s3_factory)": [[1, "feluda.factory.s3_factory.S3Factory", false]], "server (feluda.config.config attribute)": [[1, "feluda.config.Config.server", false]], "serverconfig (class in feluda.config)": [[1, "feluda.config.ServerConfig", false]], "serverparameters (class in feluda.config)": [[1, "feluda.config.ServerParameters", false]], "setup_binary() (operators.video_hash.video_hash.videohash method)": [[10, "operators.video_hash.video_hash.VideoHash.setup_binary", false]], "state() (feluda.operator.operator method)": [[1, "feluda.operator.Operator.state", false]], "state() (operators.classify_video_zero_shot.classify_video_zero_shot.classifyvideozeroshot method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot.state", false]], "state() (operators.cluster_embeddings.cluster_embeddings.clusterembeddings method)": [[4, "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings.state", false]], "state() (operators.dimension_reduction.dimension_reduction.dimensionreduction method)": [[7, "operators.dimension_reduction.dimension_reduction.DimensionReduction.state", false]], "state() (operators.image_vec_rep.image_vec_rep.imagevecrep method)": [[8, "operators.image_vec_rep.image_vec_rep.ImageVecRep.state", false]], "state() (operators.vid_vec_rep.vid_vec_rep.vidvecrep method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.state", false]], "state() (operators.video_hash.video_hash.videohash method)": [[10, "operators.video_hash.video_hash.VideoHash.state", false]], "store (feluda.config.config attribute)": [[1, "feluda.config.Config.store", false]], "storeconfig (class in feluda.config)": [[1, "feluda.config.StoreConfig", false]], "storeentity (class in feluda.config)": [[1, "feluda.config.StoreEntity", false]], "storeesparameters (class in feluda.config)": [[1, "feluda.config.StoreESParameters", false]], "storepostgresparameters (class in feluda.config)": [[1, "feluda.config.StorePostgresParameters", false]], "table_names (feluda.config.storepostgresparameters attribute)": [[1, "feluda.config.StorePostgresParameters.table_names", false]], "text_index_name (feluda.config.storeesparameters attribute)": [[1, "feluda.config.StoreESParameters.text_index_name", false]], "textfactory (class in feluda.factory.text_factory)": [[1, "feluda.factory.text_factory.TextFactory", false]], "type (feluda.config.operatorparameters attribute)": [[1, "feluda.config.OperatorParameters.type", false]], "type (feluda.config.queueconfig attribute)": [[1, "feluda.config.QueueConfig.type", false]], "type (feluda.config.serverparameters attribute)": [[1, "feluda.config.ServerParameters.type", false]], "type (feluda.config.storeentity attribute)": [[1, "feluda.config.StoreEntity.type", false]], "validate_system() (operators.classify_video_zero_shot.classify_video_zero_shot.classifyvideozeroshot static method)": [[3, "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot.validate_system", false]], "validate_system() (operators.vid_vec_rep.vid_vec_rep.vidvecrep static method)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep.validate_system", false]], "validate_system() (operators.video_hash.video_hash.videohash static method)": [[10, "operators.video_hash.video_hash.VideoHash.validate_system", false]], "video_index_name (feluda.config.storeesparameters attribute)": [[1, "feluda.config.StoreESParameters.video_index_name", false]], "videofactory (class in feluda.factory.video_factory)": [[1, "feluda.factory.video_factory.VideoFactory", false]], "videohash (class in operators.video_hash.video_hash)": [[10, "operators.video_hash.video_hash.VideoHash", false]], "vidvecrep (class in operators.vid_vec_rep.vid_vec_rep)": [[9, "operators.vid_vec_rep.vid_vec_rep.VidVecRep", false]]}, "objects": {"feluda": [[1, 0, 0, "-", "config"], [1, 0, 0, "-", "feluda"], [1, 0, 0, "-", "logger"], [1, 0, 0, "-", "operator"]], "feluda.config": [[1, 1, 1, "", "Config"], [1, 1, 1, "", "OperatorConfig"], [1, 1, 1, "", "OperatorParameters"], [1, 1, 1, "", "QueueConfig"], [1, 1, 1, "", "QueueParameters"], [1, 1, 1, "", "ServerConfig"], [1, 1, 1, "", "ServerParameters"], [1, 1, 1, "", "StoreConfig"], [1, 1, 1, "", "StoreESParameters"], [1, 1, 1, "", "StoreEntity"], [1, 1, 1, "", "StorePostgresParameters"], [1, 4, 1, "", "load"]], "feluda.config.Config": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "operators"], [1, 3, 1, "", "queue"], [1, 3, 1, "", "server"], [1, 3, 1, "", "store"]], "feluda.config.OperatorConfig": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "label"], [1, 3, 1, "", "parameters"]], "feluda.config.OperatorParameters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "name"], [1, 3, 1, "", "parameters"], [1, 3, 1, "", "type"]], "feluda.config.QueueConfig": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "label"], [1, 3, 1, "", "parameters"], [1, 3, 1, "", "type"]], "feluda.config.QueueParameters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "host_name"], [1, 3, 1, "", "queues"]], "feluda.config.ServerConfig": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "label"], [1, 3, 1, "", "parameters"]], "feluda.config.ServerParameters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "port"], [1, 3, 1, "", "type"]], "feluda.config.StoreConfig": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "entities"]], "feluda.config.StoreESParameters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "audio_index_name"], [1, 3, 1, "", "host_name"], [1, 3, 1, "", "image_index_name"], [1, 3, 1, "", "text_index_name"], [1, 3, 1, "", "video_index_name"]], "feluda.config.StoreEntity": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "label"], [1, 3, 1, "", "parameters"], [1, 3, 1, "", "type"]], "feluda.config.StorePostgresParameters": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "table_names"]], "feluda.factory": [[1, 0, 0, "-", "audio_factory"], [1, 0, 0, "-", "image_factory"], [1, 0, 0, "-", "s3_factory"], [1, 0, 0, "-", "text_factory"], [1, 0, 0, "-", "video_factory"]], "feluda.factory.audio_factory": [[1, 1, 1, "", "AudioFactory"]], "feluda.factory.audio_factory.AudioFactory": [[1, 2, 1, "", "make_from_file_on_disk"], [1, 2, 1, "", "make_from_url"], [1, 2, 1, "", "make_from_url_to_wav"]], "feluda.factory.image_factory": [[1, 1, 1, "", "ImageFactory"]], "feluda.factory.image_factory.ImageFactory": [[1, 2, 1, "", "make_from_file_in_memory"], [1, 2, 1, "", "make_from_file_on_disk"], [1, 2, 1, "", "make_from_file_on_disk_to_path"], [1, 2, 1, "", "make_from_url"], [1, 2, 1, "", "make_from_url_to_path"]], "feluda.factory.s3_factory": [[1, 1, 1, "", "S3Factory"]], "feluda.factory.s3_factory.S3Factory": [[1, 3, 1, "", "aws_access_key_id"], [1, 3, 1, "", "aws_bucket"], [1, 3, 1, "", "aws_region"], [1, 3, 1, "", "aws_secret_access_key"], [1, 2, 1, "", "download_file_from_s3"], [1, 3, 1, "", "s3"]], "feluda.factory.text_factory": [[1, 1, 1, "", "TextFactory"]], "feluda.factory.text_factory.TextFactory": [[1, 2, 1, "", "make_from_file_in_memory"], [1, 2, 1, "", "make_from_file_on_disk"], [1, 2, 1, "", "make_from_url"]], "feluda.factory.video_factory": [[1, 1, 1, "", "VideoFactory"]], "feluda.factory.video_factory.VideoFactory": [[1, 2, 1, "", "make_from_file_in_memory"], [1, 2, 1, "", "make_from_file_on_disk"], [1, 2, 1, "", "make_from_url"]], "feluda.feluda": [[1, 1, 1, "", "Feluda"]], "feluda.feluda.Feluda": [[1, 2, 1, "", "__init__"]], "feluda.logger": [[1, 1, 1, "", "Logger"]], "feluda.logger.Logger": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "debug"], [1, 2, 1, "", "error"], [1, 2, 1, "", "exception"], [1, 2, 1, "", "info"], [1, 2, 1, "", "prettyprint"]], "feluda.operator": [[1, 1, 1, "", "Operator"]], "feluda.operator.Operator": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "cleanup"], [1, 2, 1, "", "run"], [1, 2, 1, "", "state"]], "operators.classify_video_zero_shot.classify_video_zero_shot": [[3, 1, 1, "", "ClassifyVideoZeroShot"]], "operators.classify_video_zero_shot.classify_video_zero_shot.ClassifyVideoZeroShot": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "analyze"], [3, 2, 1, "", "cleanup"], [3, 2, 1, "", "extract_frames"], [3, 2, 1, "", "gen_data"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "run"], [3, 2, 1, "", "state"], [3, 2, 1, "", "validate_system"]], "operators.cluster_embeddings.cluster_embeddings": [[4, 1, 1, "", "ClusterEmbeddings"]], "operators.cluster_embeddings.cluster_embeddings.ClusterEmbeddings": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "affinity_propagation"], [4, 2, 1, "", "agglomerative"], [4, 2, 1, "", "cleanup"], [4, 2, 1, "", "gen_data"], [4, 2, 1, "", "kmeans"], [4, 2, 1, "", "run"], [4, 2, 1, "", "state"]], "operators.dimension_reduction.dimension_reduction": [[7, 1, 1, "", "DimensionReduction"]], "operators.dimension_reduction.dimension_reduction.DimensionReduction": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "cleanup"], [7, 2, 1, "", "gen_data"], [7, 2, 1, "", "get_reduction_model"], [7, 2, 1, "", "run"], [7, 2, 1, "", "state"]], "operators.image_vec_rep.image_vec_rep": [[8, 1, 1, "", "ImageVecRep"]], "operators.image_vec_rep.image_vec_rep.ImageVecRep": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "cleanup"], [8, 2, 1, "", "extract_feature"], [8, 2, 1, "", "run"], [8, 2, 1, "", "state"]], "operators.vid_vec_rep.vid_vec_rep": [[9, 1, 1, "", "VidVecRep"]], "operators.vid_vec_rep.vid_vec_rep.VidVecRep": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "analyze"], [9, 2, 1, "", "cleanup"], [9, 2, 1, "", "extract_features"], [9, 2, 1, "", "extract_frames"], [9, 2, 1, "", "gendata"], [9, 2, 1, "", "get_mean_feature"], [9, 2, 1, "", "load_model"], [9, 2, 1, "", "run"], [9, 2, 1, "", "state"], [9, 2, 1, "", "validate_system"]], "operators.video_hash.video_hash": [[10, 1, 1, "", "VideoHash"]], "operators.video_hash.video_hash.VideoHash": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "cleanup"], [10, 2, 1, "", "extract_pure_average_feature"], [10, 2, 1, "", "hash_video"], [10, 2, 1, "", "run"], [10, 2, 1, "", "setup_binary"], [10, 2, 1, "", "state"], [10, 2, 1, "", "validate_system"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "terms": {"": [6, 16], "0": [3, 4, 5, 6, 7, 9, 11], "000": 11, "015089876018464565": 3, "01_plot_tsne_video": 0, "02_plot_cluster_video": 0, "03_classify_video_zero_shot": 0, "045": 11, "1": [3, 4, 5, 6, 7, 9], "10": [6, 8, 9, 11, 12, 15], "100": [4, 11], "1000": 11, "101": 4, "11": [3, 6, 9], "123": 7, "124": 7, "128x128": 11, "14": 11, "16": 11, "19": 5, "2": [3, 4, 5, 7, 9], "20": 11, "200": 11, "2048": 11, "21": 9, "256": 11, "26": [4, 7], "2d": [7, 13], "3": [6, 7, 8, 9, 12, 15], "30": 5, "32": [3, 9], "3d": 7, "3f": 5, "4": [3, 7, 9], "42": 7, "45": 11, "4k": 11, "5": [7, 11], "51": [3, 9], "512": [8, 9, 11, 16], "6": [3, 4, 6, 7, 9, 11], "7": 7, "8": [6, 11], "9849101901054382": 3, "A": [3, 4, 7, 9], "By": 12, "For": [12, 15], "If": [7, 12], "It": [3, 4, 5, 6, 7, 8, 9, 10, 14], "On": [3, 6, 9, 10], "The": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12], "These": 6, "To": 12, "__init__": [1, 3, 4, 7, 8, 9, 10, 11, 12], "__version__": 15, "_build": 0, "abc": 1, "about": [12, 16], "abstract": 1, "accept": 6, "access": [7, 9], "across": 3, "actual": [11, 12], "add": [0, 3, 6, 9, 10, 11, 12], "addit": 15, "affin": 4, "affinity_propag": 4, "after": [0, 3, 9, 15], "agglom": 4, "agre": 12, "ai": 10, "algorithm": [4, 7, 10], "all": [1, 2, 12], "all_oper": 11, "alloc": 11, "amazonaw": 3, "an": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16], "analys": 14, "analysi": [6, 7], "analyz": [3, 5, 9, 14], "ani": [1, 3, 4, 7, 10, 12], "api": [12, 15, 16], "append": 11, "applic": [5, 12, 14], "approach": 3, "appropri": 0, "approxim": 7, "apt": [3, 6, 9, 10], "ar": [3, 4, 5, 6, 7, 8, 9, 10], "architectur": 14, "arg": 1, "arrai": [4, 7], "audio": [4, 14], "audio_factori": 1, "audio_index_nam": 1, "audio_path": 1, "audio_url": 1, "audiofactori": 1, "autodoc": 0, "automat": [0, 4, 13], "automodul": 0, "avail": [2, 3, 6, 9, 10], "averag": [8, 9, 10], "avg_execution_tim": 11, "avg_memory_chang": 11, "aws_access_key_id": 1, "aws_bucket": 1, "aws_region": 1, "aws_secret_access_kei": 1, "b": [3, 4, 9], "base": [3, 4, 7, 8, 9], "base64": 10, "basic": 12, "batch": 9, "befor": 12, "behavior": 12, "being": 5, "benchmark": 14, "benchmark_oper": 11, "benchmark_result": 11, "benchmarkreport": 11, "between": [4, 5], "beyond": 14, "binari": 10, "block": 0, "bool": [3, 9], "both": [4, 9], "branch": 12, "brew": 6, "browser": 0, "bucket_nam": 1, "bug": 15, "built": [0, 14], "bumbl": 5, "button": 0, "byte": 10, "c": 4, "can": [0, 4, 6, 10, 12, 13, 15], "capabl": 6, "captur": 11, "case": [13, 16], "cat": [3, 10], "cat_vid_2mb": 3, "cd": [11, 12, 15], "chang": [11, 12], "charact": 6, "characterist": 11, "check": [6, 9, 12, 15, 16], "ci": 12, "class": [3, 4, 7, 8, 9], "classif": [0, 3, 8, 9], "classifi": [2, 13], "classify_video_zero_shot": [3, 13], "classifyvideozeroshot": 3, "clean": [0, 1, 3, 4, 7, 8, 9, 10], "cleanup": [1, 3, 4, 5, 6, 7, 8, 9, 10, 16], "clear": 12, "clip": [3, 9], "clock": 11, "clone": [12, 15], "cluster": [0, 2, 7, 8, 9, 11, 13], "cluster_embed": [4, 11], "cluster_embeddings_": 11, "cluster_embeddings_kmean": 11, "clusterembed": [4, 11], "code": [0, 11], "colab": 13, "collect": 13, "com": [3, 5, 6, 8, 10, 12, 15, 16], "commit": 12, "compar": 3, "comparison": 10, "complex": 16, "compon": 0, "comprehens": 11, "comput": 9, "concept": 12, "conf": 0, "config": [1, 11], "config_path": 1, "configur": [7, 11, 12, 14], "consist": 11, "contain": [0, 3, 4, 7, 8, 9], "content": [3, 5, 6, 10, 14, 16], "contribut": [0, 14, 16], "copi": 0, "copybutton": 12, "core": [0, 14], "correctli": 12, "correspond": [0, 4, 7], "count": 4, "cpu": 11, "cpu_count": 11, "creat": [0, 1, 7, 12], "current": [3, 4, 7, 8, 9], "custom": 14, "d": 4, "data": [3, 4, 7, 10], "data_descript": 11, "data_gener": 11, "dataclass": 1, "datagener": 11, "dataset": [5, 11], "datastructur": 1, "dealloc": 11, "debug": 1, "dedic": 11, "def": 11, "default": [4, 6], "depend": [0, 12], "descript": [12, 13], "design": [0, 5, 12, 14], "detail": [11, 15, 16], "detect": [5, 6, 10, 11], "detect_lewd_imag": 5, "detect_text_in_imag": 6, "detectlewdimag": 2, "detector": 5, "determin": 4, "dev": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15], "develop": [1, 11], "deviat": 11, "devic": 9, "dict": [1, 3, 4, 7, 8, 9, 10, 11], "dictionari": [3, 4, 7, 8, 9], "diff": 10, "differ": [11, 15, 16], "dim": 11, "dimens": [2, 11], "dimension": [4, 7, 8, 9], "dimension_reduct": 7, "dimensionreduct": 7, "direct": 0, "directori": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12], "discuss": 12, "disk": 1, "displai": 0, "distanc": 4, "distribut": [3, 7], "doc": [0, 12], "docstr": [0, 12], "document": [1, 2, 6, 15, 16], "dog": 3, "download": [1, 3, 6, 9, 10], "download_file_from_s3": 1, "downstream": [4, 6, 8, 9], "dtype": [8, 16], "duplic": 10, "dure": 6, "e": [0, 3, 9, 10, 12, 15], "each": [4, 9, 11], "easi": [0, 14], "edit": 15, "elasticsearch": 1, "elev": [3, 9, 10], "embed": [2, 3, 7, 8, 9, 11, 13], "empti": 7, "enabl": [6, 8, 9], "encod": 10, "eng": 6, "engin": [6, 14], "english": 6, "enhanc": 0, "ensur": [3, 4, 5, 6, 7, 8, 9, 10, 12], "entiti": 1, "environ": [1, 3, 4, 5, 6, 7, 8, 9, 10], "error": [1, 11, 12], "eval": 0, "exampl": [5, 6, 7, 8, 9, 12, 15, 16], "except": 1, "exec": 0, "execut": [0, 1], "exist": [11, 12], "expect": 12, "explor": 16, "extend": [11, 14], "extract": [3, 6, 8, 9, 10, 13, 16], "extract_featur": [8, 9], "extract_fram": [3, 9], "extract_pure_average_featur": 10, "f": [5, 6, 7, 8, 10, 11, 16], "facebook": 10, "factori": [3, 5, 6, 8, 9, 10, 16], "fail": 7, "failur": 11, "fals": [3, 6, 9], "fashion": 3, "featur": [0, 3, 8, 9, 10, 11, 12, 16], "feluda": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16], "feluda_dataset": 10, "feluda_integration_test": 12, "ffmpeg": [3, 9, 10], "file": [0, 1, 3, 6, 9, 10, 12], "file_data": 1, "file_kei": 1, "file_path": 1, "filepath": 1, "filestorag": 1, "filter": 5, "find": 13, "fingerprint": 10, "first": [9, 10], "flag": 9, "flexibl": 14, "float": [5, 10], "float16": [8, 16], "fname": [3, 9], "follow": [0, 12], "fork": 12, "format": [4, 7, 10, 12], "frame": [3, 9], "framework": [1, 5, 14], "from": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16], "function": [10, 11, 12], "g": [3, 9, 10], "gen_data": [3, 4, 7], "gendata": 9, "gener": [3, 4, 7, 8, 9, 10, 12], "generate_embed": 11, "generate_embeddings_with_clust": 11, "generate_test_imag": 11, "get": [3, 16], "get_mean_featur": 9, "get_reduction_model": 7, "git": [12, 15], "github": [10, 12, 15], "given": [3, 10], "gnu": 12, "googl": 6, "gplv3": 12, "grayscal": 11, "group": 4, "guid": [0, 16], "guidelin": 0, "ha": 11, "handl": 1, "hash": 10, "hash_valu": 10, "hash_video": 10, "have": [3, 9, 10, 12, 13], "help": [5, 11, 16], "here": [11, 13, 16], "hierarch": 4, "high": [4, 5, 7], "higher": [12, 15], "hin": 6, "hindi": 6, "hook": 12, "host_nam": 1, "how": 13, "html": [0, 12], "http": [3, 5, 6, 8, 10, 12, 15, 16], "hub": 5, "huggingfac": [3, 5, 9], "human": 11, "i": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12], "identifi": 5, "imag": [3, 5, 6, 8, 9, 11, 14, 16], "image_data": 1, "image_factori": 1, "image_index_nam": 1, "image_obj": [8, 16], "image_path": 1, "image_url": 1, "image_vec_rep": 8, "imagefactori": [1, 5, 6, 8, 16], "imagenet": 8, "imagevecrep": 16, "img": 8, "implement": 12, "import": [3, 4, 5, 6, 7, 8, 9, 10, 11, 15], "inappropri": 5, "includ": [6, 11, 12], "index": 0, "indian": 14, "indic": [5, 9], "individu": 15, "infer": 3, "info": 1, "inform": [11, 15, 16], "inherit": 12, "initi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12], "input": [4, 5, 7, 8, 11], "input_data": [4, 7, 11], "instal": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "instanc": 7, "int": [1, 4, 6], "integr": 12, "interest": 12, "interfac": 7, "intern": [1, 10], "invalid": 7, "is_avg": 9, "issu": 15, "item": 7, "its": [1, 13], "jpg": [5, 8, 16], "jupyt": [0, 13], "kei": [0, 3, 8, 9, 10], "keyerror": 7, "keyfram": 9, "kmean": 4, "known": 11, "kwarg": 1, "label": [1, 3, 4, 11], "lang": 6, "languag": [6, 14], "layer": 8, "learn": [4, 7, 12, 16], "lewd": 5, "like": 3, "likelihood": 5, "linear": 7, "lingual": 14, "lint": 12, "linux": [3, 6, 9, 10], "list": [1, 3, 4, 7, 9, 10, 11], "load": [1, 3, 5, 6, 8, 9, 10, 16], "load_model": 9, "local": [1, 12], "local_file_path": 1, "log": 1, "logic": 1, "low": 5, "lower": 7, "machin": 12, "maco": [3, 6, 9, 10, 11], "made": [10, 15], "mai": 15, "main": [0, 7, 10, 11, 12], "maintain": 11, "make": [0, 9, 10, 12], "make_from_file_in_memori": 1, "make_from_file_on_disk": [1, 9], "make_from_file_on_disk_to_path": 1, "make_from_url": [1, 3, 8, 10, 16], "make_from_url_to_path": [1, 5, 6], "make_from_url_to_wav": 1, "manag": [3, 9, 10], "manifold": 7, "mannheim": 6, "map": 4, "markdown": 0, "matrix": [4, 9], "maximum": 11, "md": [0, 11, 12], "mean": 9, "measur": 11, "media": [3, 10, 15], "memori": [1, 11], "memory_profil": 11, "merg": 4, "messag": [1, 4, 12], "method": [9, 10], "minim": 4, "modal": [4, 14], "mode": [6, 11, 12, 15], "model_typ": 7, "moder": [5, 6], "modul": 12, "modular": 14, "module_nam": 1, "more": 16, "most": [3, 7], "mp4": [3, 9, 10], "msg": 1, "multi": 14, "multipl": 6, "must": [3, 8], "my_funct": 11, "my_oper": 11, "myoper": 11, "myst": [0, 12], "n_cluster": [4, 11], "n_compon": 7, "name": [1, 12], "nb": [0, 12], "nd": 7, "ndarrai": [4, 7, 8], "need": 12, "neighbor": 7, "net": 11, "non": 7, "none": [1, 3, 4, 7, 8, 9, 10], "notebook": [0, 13], "np": [4, 8], "num_clust": 11, "number": 4, "numpi": [4, 7, 8, 11], "object": [1, 3, 8, 9], "ocr": 6, "oem": 6, "onto": 9, "open": [0, 12, 15], "openai": [3, 9], "oper": [0, 13, 14], "operator_class": 11, "operator_nam": 11, "operatorconfig": 1, "operatorparamet": 1, "optic": 6, "optim": 11, "option": [4, 7], "org": [3, 9, 10], "our": 12, "out": 16, "output": [3, 4, 7, 10], "pack": 6, "packag": [3, 9, 10], "page": 6, "pair": 4, "param": 7, "param1": 11, "param2": 11, "paramet": [1, 3, 4, 6, 7, 8, 9], "partit": 4, "pass": [11, 12], "path": [1, 3, 6, 9, 10], "pattern": 15, "payload": [4, 7], "paylod": 7, "pdqf": 10, "peak": 11, "per": 11, "percentag": 11, "perceptu": 10, "perplex": 7, "pil": [3, 8, 9], "pillow": [3, 6, 9, 11], "pip": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15], "platform": 11, "pleas": 12, "plot_cluster_video": 13, "plot_tsne_video": 13, "png": 6, "point": 4, "pool": 8, "port": 1, "postgresql": 1, "potenti": 5, "power": 14, "powershel": [3, 9, 10], "pre": [3, 8, 9, 12], "predict": 3, "prepar": [4, 7], "present": 5, "preserv": 7, "pretti": 1, "prettyprint": 1, "print": [1, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16], "privat": 5, "prob": 3, "probabl": [3, 5], "problemat": 5, "process": [3, 6, 9, 10, 11, 14, 16], "processor": [3, 9], "product": 14, "project": [3, 4, 5, 6, 7, 8, 9, 10, 12, 16], "propag": 4, "properti": 4, "prototyp": 9, "provid": [3, 7, 11, 12, 14], "psm": 6, "psutil": 11, "public": 12, "pure": 10, "purpos": 7, "py": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "pyproject": 12, "pytesseract": 6, "pytest": [3, 4, 5, 6, 7, 8, 9, 10, 12], "python": [0, 6, 8, 9, 11, 12, 15], "pytorch": [8, 9], "qualiti": 10, "queue": 1, "queueconfig": 1, "queueparamet": 1, "quick": [0, 14], "quickli": 16, "quickstart": 0, "rais": 7, "random_st": 7, "rate": 11, "raw": 10, "read": [0, 12], "readabl": 11, "readi": 14, "readm": 12, "real": 14, "reason": 11, "recognit": 6, "reduc": 7, "reduced_embed": 7, "reduct": 2, "reductionmodel": 7, "remov": [3, 9], "remove_after_process": [3, 6, 9], "repositori": [12, 15], "represent": [8, 9], "reproduc": 12, "requir": [3, 9, 10, 15], "research": 10, "resnet18": 8, "resolut": 11, "resourc": [1, 3, 4, 6, 7, 8, 9, 10], "respons": 0, "result": [3, 4, 7], "retriev": 4, "return": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11], "review": 15, "rgb": 11, "root": [3, 4, 5, 6, 7, 8, 9, 10], "rst": 0, "rtd": 12, "ruff": 12, "run": [1, 12, 16], "runtime_kwarg": 11, "s3": 3, "s3_factori": 1, "s3factori": 1, "sampl": [10, 11], "sample_1": 7, "sample_2": 7, "sample_3": 7, "samples_per_clust": 11, "save": 1, "save_json": 11, "save_markdown": 11, "scalabl": 7, "scikit": [4, 7], "score": 5, "search": [3, 12], "section": [1, 2], "segment": 6, "send": 4, "server": 1, "serverconfig": 1, "serverparamet": 1, "set": 6, "setup": 10, "setup_binari": 10, "shape": [8, 9, 16], "shot": [0, 2, 9, 13], "should": 12, "similar": [4, 8, 9, 10], "simpl": 16, "size": [4, 7, 8, 9, 11], "sne": [0, 7, 13], "some": 15, "sourc": [1, 3, 4, 5, 6, 7, 8, 9, 10], "space": 13, "specif": [12, 15], "specifi": [4, 9], "sphinx": [0, 12], "standard": 11, "start": 0, "state": [1, 3, 4, 6, 7, 8, 9, 10], "static": [1, 3, 4, 7, 9, 10], "statist": 11, "step": 12, "stochast": 7, "store": 1, "storeconfig": 1, "storeent": 1, "storeesparamet": 1, "storepostgresparamet": 1, "str": [1, 3, 4, 7, 9, 10], "string": [6, 10], "structur": [7, 12], "submit": 12, "success": 11, "success_r": 11, "sudo": [3, 6, 9, 10], "summar": 4, "summari": 11, "support": [4, 5, 6, 7, 14, 15], "sure": [9, 10], "syntax": 0, "synthet": 11, "system": [10, 12, 14], "system_info": 11, "t": [0, 7, 13], "table_nam": 1, "tam": 6, "tamil": 6, "task": [4, 6, 8, 9], "tattl": [3, 10, 15], "tel": 6, "telugu": 6, "tempor": 10, "tensor": [3, 9], "tensorflow": 5, "tesseract": 6, "test": 11, "test_data": 11, "test_imag": 11, "text": [3, 6, 14], "text_factori": 1, "text_index_nam": 1, "text_path": 1, "text_url": 1, "textfactori": 1, "thank": 12, "them": 13, "theme": [0, 12], "thi": [0, 1, 2, 10, 12, 16], "time": 11, "timestamp": 11, "tmk": 10, "tmk_data": 10, "toctre": 0, "toml": 12, "torch": [3, 9], "torchvis": 9, "total": 11, "total_memory_gb": 11, "track": 11, "train": [3, 8, 9], "transform": [3, 9], "tsne": 7, "two": [6, 9, 10], "type": [1, 3, 4, 7, 8, 9, 10, 11, 15, 16], "typic": 7, "ub": 6, "ui": 0, "umap": 7, "under": 12, "understand": 12, "uniform": 7, "unit": 12, "unknown": 4, "up": [1, 3, 4, 7, 8, 9, 10], "url": [1, 10], "us": [0, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15], "usag": [11, 15], "user": 3, "usernam": 12, "uv": [0, 3, 4, 5, 6, 7, 8, 9, 10], "v": 12, "v3": 12, "valid": [3, 9, 10, 11], "validate_system": [3, 9, 10], "valu": 5, "value1": 11, "value2": 11, "valueerror": 7, "varianc": 4, "variou": [1, 5, 14], "vector": [4, 7, 8, 9, 10, 16], "veri": 5, "verifi": 15, "version": 12, "via": [3, 5, 6, 9, 10], "vid_vec": 9, "vid_vec_rep": 9, "video": [2, 4, 9, 10, 13, 14], "video_factori": 1, "video_hash": 10, "video_index_nam": 1, "video_path": [1, 10], "video_url": [1, 3], "videofactori": [1, 3, 9, 10], "vido": 13, "virtual": [3, 4, 5, 6, 7, 8, 9, 10], "vision": 8, "visual": [0, 4, 7, 13], "vit": [3, 9], "wall": 11, "wav": 1, "web": 0, "weight": 8, "welcom": 14, "werkzeug": 1, "when": 12, "whether": [3, 9], "which": 13, "while": 7, "window": [3, 6, 9, 10], "winget": [3, 9, 10], "within": 4, "work": [9, 12, 15], "world": 14, "wrapper": 6, "x86_64": 11, "yaml": 1, "yield": 9, "you": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16], "your": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "your_new_oper": 12, "your_oper": 12, "zero": [0, 2, 9, 13]}, "titles": ["Feluda Documentation", "Feluda Core API", "Operators API", "Classify Video Zero Shot Operator", "Cluster Embeddings Operator", "DetectLewdImages Operator", "DetectTextInImage Operator", "Dimension Reduction Operator", "ImageVecRep-Resnet Operator", "VidVecRep Operator", "VideoHash Operator", "Benchmarking", "Contributing to Feluda", "Examples", "Feluda Documentation", "Installation", "Quick Start"], "titleterms": {"1": [11, 16], "2": [11, 16], "3": 11, "4": 11, "ad": [0, 12], "all": [11, 15], "api": [0, 1, 2, 14], "audio": [1, 15], "base": [1, 10], "basic": [15, 16], "benchmark": 11, "build": [0, 12], "class": [1, 10], "classifi": 3, "cluster": 4, "code": 12, "command": 0, "compon": 11, "conduct": 12, "configur": [0, 1, 6], "contribut": 12, "core": 1, "creat": 11, "data": 11, "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 15], "descript": [3, 4, 5, 6, 7, 8, 9, 10], "detectlewdimag": 5, "detecttextinimag": 6, "develop": [12, 14, 15], "dimens": 7, "document": [0, 12, 14], "embed": 4, "engin": 11, "exampl": [0, 3, 11, 13, 14], "execut": 11, "factori": 1, "featur": 14, "feluda": [0, 1, 12, 14], "file": 11, "format": 5, "gener": [0, 11], "get": [12, 14, 15], "guidelin": 12, "help": 15, "how": [3, 4, 5, 6, 7, 8, 9, 10], "i": 14, "imag": [1, 15], "imagevecrep": 8, "import": 16, "inform": [3, 4, 5, 6, 7, 8, 9, 10], "initi": 16, "instal": 15, "issu": 12, "json": 11, "kei": 14, "licens": 12, "logger": 1, "main": 1, "markdown": 11, "metric": 11, "model": [3, 4, 5, 6, 7, 8, 9, 10], "modul": 1, "new": [0, 11, 12], "next": 16, "oper": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16], "option": 15, "output": 5, "page": 0, "perform": 11, "prerequisit": [0, 12, 15], "process": [12, 15], "profil": 11, "pull": 12, "qualiti": 11, "question": 12, "quick": [11, 16], "recommend": 10, "reduct": 7, "refer": 14, "regist": 11, "report": [11, 12], "request": 12, "resnet": 8, "result": 11, "run": [3, 4, 5, 6, 7, 8, 9, 10, 11], "s3": 1, "setup": 12, "shot": 3, "specif": 11, "start": [11, 12, 14, 16], "step": 16, "structur": [0, 11], "style": 12, "system": [3, 6, 8, 9, 11], "test": [3, 4, 5, 6, 7, 8, 9, 10, 12], "text": 1, "understand": 11, "updat": 12, "us": [10, 16], "usag": [3, 4, 5, 6, 7, 8, 9, 10, 16], "verif": 15, "video": [1, 3, 15], "videohash": 10, "vidvecrep": 9, "view": 0, "what": 14, "zero": 3}})